{"version": "dacity-32", "payload": {"course": {"instructors": [{"bio": "Steve Huffman co-founded the social news site <a href\"http://www.reddit.com\" target=\"_blank\">reddit.com</a> in 2005 with his college roommate. reddit.com has since grown into one of the largest communities online. In 2010, he co-founded <a href\"http://www.hipmunk.com\" target=\"_blank\">Hipmunk</a>, a company\nto take the agony out of searching for plane and hotel tickets. Steve was named to Inc. Magazine's 30 under 30 list in 2011. He studied Computer Science at the University of Virginia.", "name": "Steve Huffman", "parent": "None", "headshot_url": "/image/headshot/Instructor/881019", "key": "agpzfnVkYWNpdHl1chILEgpJbnN0cnVjdG9yGPviNQw", "path": "Instructor/881019", "type": "Instructor", "id": 881019}], "name": "Web Application Engineering", "parent": "None", "icon_url": "/icon/Course/cs253", "faq": "<p>\n<b>Is there a fee to take the course?</b><br/>\nNope, no fees. All of our classes are offered free of charge.\n</p>\n\n<p>\n<b>Can you enroll in more than one class? </b><br/>\nYes! Keep in mind CS101 is intended for students with no previous programming background, CS212, 253 and 262 are courses oriented towards students with some programming experience (the equivalent of CS101), while CS373 and CS387 assumes students have prior programming experience.</p>\n\n<p>\n<b>When do classes start?</b><br/>\n\nApril 16, 2012.\n</p>\n\n<p>\n<b>When do I have to be online to watch the lectures?</b><br/>\nThe lectures are posted each week for you to view at your convenience.\n</p>\n\n<p>\n<b>How is the class formatted?</b><br/>\nThe class is broken into 6 week-long units and a seventh week that wraps up the course and has a final exam. Each unit contains multiple lecture segments with interactive quizzes built in.  There will be one homework assignment which will include programming problems each week. There will be approximately 50 minutes of lecture videos.\n</p>\n\n<p>\n<b>Will there be closed captioning?</b><br/>\n\nYes, the videos will have captions in English.  We're also working to support other languages in future.\n</p>\n\n<p>\n<b>What will I get for completing the classes?</b><br/>\nStudents who complete a course will also receive a certificate signed by the instructors. \n</p>", "syllabus": "<p><b> Description</b>:  Web applications have the power to provide useful services to millions of \n\tpeople worldwide.  In this class, you will learn how to build your own blog application \n\tstarting from the basics of how the web works and how to set up a web application and \n\tprocess user input, to how to use databases, manage user accounts, interact with other \n\tweb services, and make your application scale to support large numbers of users.</p>\n\t\t\n\t\t<p class=\"syllabus-week\">WEEK 1:</p>\n\t\t<p class=\"syllabus-desc\">\n\t\t<b>How the Web Works</b><br>\n\t\t   Introduction to HTTP and Web Applications\n\t\t</p>\n\t\t<br class=\"clear\"/>\n\t\t<p class=\"syllabus-week\">WEEK 2:</p>\n\t\t<p class=\"syllabus-desc\">\n\t\t<b>How to Have Users</b><br>\n\t\t   Getting and processing user input\n\t\t</p>\n\t\t<br class=\"clear\"/>\n\t\t<p class=\"syllabus-week\">WEEK 3:</p>\n\t\t<p class=\"syllabus-desc\">\n\t\t<b>How to Manage State</b><br>\n\t\t   Databases and persistent data\n\t\t</p>\n\t\t<br class=\"clear\"/>\n\t\t<p class=\"syllabus-week\">WEEK 4:</p>\n\t\t<p class=\"syllabus-desc\">\n\t\t<b>Whom to Trust</b><br>\n\t\t   User authentication and access control\n\t\t</p>\n\t\t<br class=\"clear\"/>\n\t\t<p class=\"syllabus-week\">WEEK 5:</p>\n\t\t<p class=\"syllabus-desc\">\n\t\t<b>How to Connect</b><br>\n\t\t   Web applications as services, using APIs\n\t\t</p>\n\t\t<br class=\"clear\"/>\n\t\t<p class=\"syllabus-week\">WEEK 6:</p>\n\t\t<p class=\"syllabus-desc\">\n\t\t<b>How to Serve Millions</b><br>\n\t\t   Scaling, caching, optimizations\n\t\t</p>\n\t\t<br class=\"clear\"/>\n\t\t<p class=\"syllabus-week\">WEEK 7:</p>\n\t\t<p class=\"syllabus-desc\">\n\t\t<b>Changing the World</b><br>\n\t\t   Building a successful web application, project\n\t\t</p>", "teaser": {"dotsub_id": null, "name": "teaser", "parent": "None", "transcript": null, "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1cg0LEgVNZWRpYRigzTcM", "youtube_id": "CRYn30--PPk", "youtube_state": null, "path": "Media/911008", "type": "Media", "id": 911008}, "prereqs": "<p><b class=\"sans\">PREREQUISITES</b></p>\n\t<p>\n    This course assumes previous programming experience, comparable to what is covered by the Udacity CS101 course.  \n\t</p>", "image_url": "/image/Course/cs253", "key": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "is_public": true, "course_id": "cs253", "path": "Course/cs253", "type": "Course", "id": "cs253", "description": "Learn about engineering web applications with Steve Huffman! By the end of the class, you will have built your own blog to share with the world."}, "course_rev": {"unitLayout": [{"unit_key": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA"}, {"unit_key": "agpzfnVkYWNpdHl1cjMLEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GNmnBQw"}, {"unit_key": "agpzfnVkYWNpdHl1cjMLEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKGNBgw"}], "name": "April 2012", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "state": 1, "key": "agpzfnVkYWNpdHl1cicLEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgw", "units": [{"name": "Unit 1", "parent": "agpzfnVkYWNpdHl1cicLEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgw", "type": "Unit", "evaluated": false, "closedAt": "", "nuggetLayout": [[{"nugget_key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiKJww"}], [{"nugget_key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjZNgw"}, {"nugget_key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiJoQIM"}, {"nugget_key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjBPgw"}], [{"nugget_key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBipRgw"}, {"nugget_key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjxqAIM"}, {"nugget_key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiSTgw"}], [{"nugget_key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjhXQw"}, {"nugget_key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBi6kQIM"}, {"nugget_key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBijHww"}], [{"nugget_key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiMJww"}, {"nugget_key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiDfQw"}, {"nugget_key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiBfQw"}], [{"nugget_key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjRjAEM"}], [{"nugget_key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBj2-AQM"}], [{"nugget_key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiJpAEM"}, {"nugget_key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiRvwUM"}, {"nugget_key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjZswEM"}], [{"nugget_key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiqRgw"}, {"nugget_key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjhzgUM"}, {"nugget_key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiRywEM"}], [{"nugget_key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjCPgw"}, {"nugget_key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjRZQw"}, {"nugget_key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBj50gEM"}], [{"nugget_key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjiXQw"}, {"nugget_key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjJ1gUM"}, {"nugget_key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiinAEM"}], [{"nugget_key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjaswEM"}], [{"nugget_key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBikHww"}, {"nugget_key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBix3gUM"}, {"nugget_key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiCfQw"}], [{"nugget_key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBj70gEM"}, {"nugget_key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjm1wIM"}, {"nugget_key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiybQw"}], [{"nugget_key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBix6gEM"}], [{"nugget_key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjSjAEM"}, {"nugget_key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiqwwEM"}, {"nugget_key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjbswEM"}], [{"nugget_key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjCuwEM"}], [{"nugget_key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBisRgw"}], [{"nugget_key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiB-gEM"}, {"nugget_key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBi8lAEM"}, {"nugget_key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBicdQw"}], [{"nugget_key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBi0bQw"}, {"nugget_key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjVjAEM"}, {"nugget_key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBj7VQw"}], [{"nugget_key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiedQw"}], [{"nugget_key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjRiQIM"}, {"nugget_key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBj3qwEM"}, {"nugget_key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiOJww"}], [{"nugget_key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiLpAEM"}, {"nugget_key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiFfQw"}, {"nugget_key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjMZQw"}], [{"nugget_key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBi5kQIM"}, {"nugget_key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjshAEM"}, {"nugget_key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjOZQw"}], [{"nugget_key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBi1bQw"}], [{"nugget_key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjEPgw"}, {"nugget_key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiGfQw"}], [{"nugget_key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBi2bQw"}, {"nugget_key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiQpAEM"}, {"nugget_key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBijnAEM"}], [{"nugget_key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBihmQIM"}], [{"nugget_key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjcswEM"}], [{"nugget_key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiC-gEM"}, {"nugget_key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjGPgw"}, {"nugget_key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBji2gEM"}], [{"nugget_key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBj90gEM"}], [{"nugget_key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjM4gEM"}, {"nugget_key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBi3bQw"}, {"nugget_key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBigdQw"}]], "availableAt": "", "key": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "path": "Course/cs253/CourseRev/apr2012/Unit/4001", "open": false, "id": 4001, "nuggets": [{"nuggetType": "lecture", "name": "Components Of The Web Solution", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "82d3d9a2-8c9f-49cf-9e36-89592aea7072", "name": "cs253_unit1_03_s_Components-of-the-Web", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch0LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGMllDA", "youtube_id": "k7JAV6qzzqg", "youtube_state": "done", "path": "Course/cs253/Media/13001", "transcript": "\ufeff", "id": 13001}, "key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBijHww", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/4003", "type": "Nugget", "id": 4003}, {"nuggetType": "lecture", "name": "Whitespace", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "a6e8f645-3bd8-42a6-80e0-bd84498bde39", "name": "cs253_unit1_12_p_Whitespace", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch0LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGJt1DA", "youtube_id": "n77PZV6RQUA", "youtube_state": "done", "path": "Course/cs253/Media/15003", "transcript": "\ufeff1\n00:00:00,000 --> 00:00:02,000\nLet's talk about Whitespace for a moment. \n\n2\n00:00:02,000 --> 00:00:05,000\nYou may have noticed, when I was entering text in the editor before, \n\n3\n00:00:05,000 --> 00:00:07,000\nthat even though I put text on multiple lines--\n\n4\n00:00:07,000 --> 00:00:09,000\nwhen I rendered it in HTML,\n\n5\n00:00:09,000 --> 00:00:11,000\nit rendered all on a single line. \n\n6\n00:00:11,000 --> 00:00:13,000\nThis is because, in HTML, all Whitespace--\n\n7\n00:00:13,000 --> 00:00:15,000\nnew lines, tabs, spaces--\n\n8\n00:00:15,000 --> 00:00:17,000\nall turn into a single space. \n\n9\n00:00:17,000 --> 00:00:19,000\nTo force our HTML to have multiple lines, \n\n10\n00:00:19,000 --> 00:00:21,000\nwe can use another tag called the \"br\" tag. \n\n11\n00:00:21,000 --> 00:00:23,000\nIt looks like this: <br>.\n\n12\n00:00:23,000 --> 00:00:25,000\nIt is also a \"void\" tag. \n\n13\n00:00:25,000 --> 00:00:27,000\nIt stands for \"break\"--\n\n14\n00:00:27,000 --> 00:00:29,000\nand it's a <void> tag--\n\n15\n00:00:29,000 --> 00:00:33,000\nand you put this after any lines that you want to appear on multiple lines. \n\n16\n00:00:33,000 --> 00:00:36,000\nLet's play around with this in the browser a little bit. \n\n17\n00:00:36,000 --> 00:00:40,000\nHere we are in the browser--let's enter some text. \n\n18\n00:00:40,000 --> 00:00:43,000\nWe've got this text that's really too long for one line,\n\n19\n00:00:43,000 --> 00:00:47,000\nand when we render this, it appears as one line. \n\n20\n00:00:47,000 --> 00:00:49,000\nLet's put a little line break here. \n\n21\n00:00:49,000 --> 00:00:51,000\nWhen I render this, \n\n22\n00:00:51,000 --> 00:00:53,000\nit still appears as one line. \n\n23\n00:00:53,000 --> 00:00:55,000\nIf we want to render multiple lines, \n\n24\n00:00:55,000 --> 00:00:59,000\nwe can enter the <br> tag, like here--no problem. \n\n25\n00:00:59,000 --> 00:01:02,000\nAnd now we have a line break, and we can even enter \n\n26\n00:01:02,000 --> 00:01:06,000\nmultiple <br> tags if we want multiple line breaks. \n\n27\n00:01:06,000 --> 00:01:08,000\nOkay. There we go.\n\n28\n00:01:08,000 --> 00:01:11,000\nTwo line breaks--or two <brs> equals two line breaks,\n\n29\n00:01:11,000 --> 00:01:13,000\nCool, huh? \n\n30\n00:01:13,000 --> 00:01:15,000\nAnother way of doing line breaks \n\n31\n00:01:15,000 --> 00:01:17,000\nis to use the <p> tag. \n\n32\n00:01:17,000 --> 00:01:20,000\nThis stands for \"paragraph\".\n\n33\n00:01:20,000 --> 00:01:22,000\nThis is not a <void> tag. \n\n34\n00:01:22,000 --> 00:01:24,000\nSo the <p> tag has content and it looks like this.\n\n35\n00:01:24,000 --> 00:01:26,000\nSo because it's not a <void> tag,\n\n36\n00:01:26,000 --> 00:01:28,000\nit has a closing tag \n\n37\n00:01:28,000 --> 00:01:30,000\nand we have an opening tag. \n\n38\n00:01:30,000 --> 00:01:33,000\nSo you've got: opening <p>, content, closing </p>. \n\n39\n00:01:33,000 --> 00:01:36,000\nAnd this will render as one paragraph. \n\n40\n00:01:36,000 --> 00:01:39,000\nLet's check this out on the browser really quick.\n\n41\n00:01:39,000 --> 00:01:42,000\nOkay--so we've got these two lines; let's take a different approach. \n\n42\n00:01:42,000 --> 00:01:46,000\nI'm going to start this line with a paragraph tag\n\n43\n00:01:46,000 --> 00:01:48,000\nand we'll render this. \n\n44\n00:01:48,000 --> 00:01:50,000\nAha! Now we've got a line break here in our text. \n\n45\n00:01:50,000 --> 00:01:55,000\nNow the font got bigger and that's kind of a side effect of our HTML tool. \n\n46\n00:01:55,000 --> 00:01:59,000\nThere must be some sort of style set on \"p\"--that doesn't normally happen. \n\n47\n00:01:59,000 --> 00:02:04,000\nI'm going to wrap the bottom line with the paragraph as well. \n\n48\n00:02:04,000 --> 00:02:06,000\nOkay. There we go--now we've got two lines--\n\n49\n00:02:06,000 --> 00:02:09,000\nthe same kind of basic idea as we had before. \n\n50\n00:02:09,000 --> 00:02:11,000\nNow, we'll talk about why there's this extra space in here,\n\n51\n00:02:11,000 --> 00:02:14,000\neven though there's no space between this text up here. \n\n52\n00:02:14,000 --> 00:02:16,000\nWe'll come to that in a minute--but first, \n\n53\n00:02:16,000 --> 00:02:18,000\nquiz time. \n\n54\n00:02:18,000 --> 00:02:22,000\nTake this text, here: \"Hello everyone! We're using two lines now!\"\n\n55\n00:02:22,000 --> 00:02:25,000\nand enter the HTML to draw that,\n\n56\n00:02:25,000 --> 00:02:30,000\nas it's formatted here--with two lines--and I want you to use the <br> tag. \n\n", "id": 15003}, "key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBikHww", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/4004", "type": "Nugget", "id": 4004}, {"nuggetType": "program", "name": "Italics", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBinHww", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/4007", "suppliedCode": null, "type": "Nugget", "id": 4007}, {"nuggetType": "lecture", "name": "Course Outline", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "e6fc632e-bea4-4223-a2ca-0b187201867a", "name": "cs253_unit1_00_l_Course-Outline", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch0LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGIknDA", "youtube_id": "iETYhBsODTY", "youtube_state": "done", "path": "Course/cs253/Media/5001", "transcript": "\ufeff1\n00:00:00,000 --> 00:00:03,000\nWelcome to CS 253, this is Web Applications Engineering,\n\n2\n00:00:03,000 --> 00:00:07,000\nand in this class we're going to learn how to build web applications.\n\n3\n00:00:07,000 --> 00:00:09,000\nSo, we're going to start in unit 1 with the very basics\n\n4\n00:00:09,000 --> 00:00:13,000\nof how the web works, how it fits together, and the major pieces,\n\n5\n00:00:13,000 --> 00:00:17,000\nso we have a common vocabulary and know what we're talking about.\n\n6\n00:00:17,000 --> 00:00:19,000\nAnd then in unit 2 we get into the real meat of things,\n\n7\n00:00:19,000 --> 00:00:22,000\nwhich is forms, and submitting data to web servers.\n\n8\n00:00:22,000 --> 00:00:24,000\nIn the next unit we'll talk about databases\n\n9\n00:00:24,000 --> 00:00:26,000\n and how to actually store that data,\n\n10\n00:00:26,000 --> 00:00:28,000\nand then we'll spend some time talking\n\n11\n00:00:28,000 --> 00:00:30,000\nabout user accounts and authentication\n\n12\n00:00:30,000 --> 00:00:32,000\nand registration and all that fun stuff.\n\n13\n00:00:32,000 --> 00:00:34,000\nThen we'll talk about scaling, \n\n14\n00:00:34,000 --> 00:00:36,000\nwe'll also have a unit about integrating\n\n15\n00:00:36,000 --> 00:00:39,000\n with other website though APIs.\n\n16\n00:00:39,000 --> 00:00:41,000\nAnd then in our final unit, we'll talk to real websites\n\n17\n00:00:41,000 --> 00:00:43,000\nabout how they do things,\n\n18\n00:00:43,000 --> 00:00:45,000\nand I'll give you some of my thoughts on\n\n19\n00:00:45,000 --> 00:00:47,000\nhow to build web applications in the real world.\n\n20\n00:00:47,000 --> 00:00:50,000\nAnd over the course of this whole course,\n\n21\n00:00:50,000 --> 00:00:51,000\nwe'll be building a blog together \n\n22\n00:00:51,000 --> 00:00:53,000\nthat allow you to have user registration\n\n23\n00:00:53,000 --> 00:00:54,000\n and submit blog entries,\n\n24\n00:00:54,000 --> 00:00:57,000\nand this blog will be online, on the real internet,\n\n25\n00:00:57,000 --> 00:00:58,000\nthat anyone can see and play with, so--\n\n26\n00:00:58,000 --> 00:01:01,000\nit should be fun, and let's get started.\n\n27\n00:01:01,000 --> 00:01:04,000\nOkay. Hey, everybody, welcome to unit 1.\n\n28\n00:01:04,000 --> 00:01:06,000\nIn this unit, we're going to basically be discussing\n\n29\n00:01:06,000 --> 00:01:08,000\nthe basics of the web.\n\n30\n00:01:08,000 --> 00:01:10,000\nSo in this unit we're going to cover\n\n31\n00:01:10,000 --> 00:01:11,000\nthe web, what it is, what it looks like,\n\n32\n00:01:11,000 --> 00:01:14,000\nhow the major pieces fit together,\n\n33\n00:01:14,000 --> 00:01:18,000\nwe'll talk about HTML, which is the main document type of the web,\n\n34\n00:01:18,000 --> 00:01:22,000\nwe'll talk about URLs, which is how you refer to documents on the web,\n\n35\n00:01:22,000 --> 00:01:27,000\nwe'll talk about HTTP, which is the protocol that unites the web,\n\n36\n00:01:27,000 --> 00:01:29,000\nthat the web runs on.\n\n37\n00:01:29,000 --> 00:01:31,000\nAnd then we'll talk about web applications,\n\n38\n00:01:31,000 --> 00:01:33,000\nand--you know--what they are and how they fit into this big picture.\n\n39\n00:01:33,000 --> 00:01:35,000\nAnd this is--you know--the grand finale.\n\n40\n00:01:35,000 --> 00:01:38,000\nThis is what the course is actually about.\n\n", "id": 5001}, "key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiKJww", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/5002", "type": "Nugget", "id": 5002}, {"nuggetType": "lecture", "name": "Best Browser", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "e6f40953-0a40-4b10-aac9-921a061e7841", "name": "cs253_unit1_04_q_Best-Browser", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch0LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGLFtDA", "youtube_id": "H7h157xR-0w", "youtube_state": "done", "path": "Course/cs253/Media/14001", "transcript": "\ufeff1\n00:00:00,000 --> 00:00:01,000\nAnother quick quiz.\n\n2\n00:00:01,000 --> 00:00:03,000\nWhich of these browsers is the best?\n\n3\n00:00:03,000 --> 00:00:07,000\nYour options are: Internet Explorer, FireFox,\n\n4\n00:00:07,000 --> 00:00:10,000\nChrome, Safari, or Opera.\n\n5\n00:00:10,000 --> 00:00:13,000\nCheck which one is the correct answer.\n\n", "id": 14001}, "key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiMJww", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/5004", "type": "Nugget", "id": 5004}, {"nuggetType": "lecture", "name": "Port Solution", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "7568d3b4-d198-419f-b119-2a5f09ce5d4e", "name": "cs253_unit1_21_s_Port", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch4LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGJryAQw", "youtube_id": "yZL53ho_fmM", "youtube_state": "done", "path": "Course/cs253/Media/31002", "transcript": "\ufeff1\n00:00:00,000 --> 00:00:03,000\nThe correct answer is host: that's \"example.com\";\n\n2\n00:00:03,000 --> 00:00:06,000\nprotocol: simple--\"http ';\n\n3\n00:00:06,000 --> 00:00:10,000\nfragment: that's \"#blah\".\n\n4\n00:00:10,000 --> 00:00:14,000\nThe query is \"?p=foo\",\n\n5\n00:00:14,000 --> 00:00:19,000\nand the port is \"80\". \n\n", "id": 31002}, "key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiOJww", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/5006", "type": "Nugget", "id": 5006}, {"nuggetType": "lecture", "name": "World Wide Web", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "303df937-18b8-4445-88bd-84d15c79238e", "name": "cs253_unit1_01_q_World-Wide-Web", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch0LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGPEuDA", "youtube_id": "hvFNsm_chUw", "youtube_state": "done", "path": "Course/cs253/Media/6001", "transcript": "\ufeff1\n00:00:00,000 --> 00:00:03,000\nLet's begin with a discussion of the World Wide Web.\n\n2\n00:00:03,000 --> 00:00:08,000\nThe World Wide Web is a collection of HTML documents.\n\n3\n00:00:08,000 --> 00:00:10,000\nThese documents are made up of something called HTML,\n\n4\n00:00:10,000 --> 00:00:12,000\nwhich stands for HyperText Markup Language-- \n\n5\n00:00:12,000 --> 00:00:15,000\nthis is the basis for almost every webpage.\n\n6\n00:00:15,000 --> 00:00:17,000\nEven though there can be--you know--\n\n7\n00:00:17,000 --> 00:00:20,000\ndocuments, images, videos, and--you know--\n\n8\n00:00:20,000 --> 00:00:22,000\nall sorts of things online,\n\n9\n00:00:22,000 --> 00:00:24,000\nHTML is what glues everything together.\n\n10\n00:00:24,000 --> 00:00:25,000\nAnd the links between these pages,\n\n11\n00:00:25,000 --> 00:00:29,000\ncalled hyperlinks--or links for short--\n\n12\n00:00:29,000 --> 00:00:32,000\nis what makes the web web-like.\n\n13\n00:00:32,000 --> 00:00:36,000\nThe web was invented in the early 1990s,\n\n14\n00:00:36,000 --> 00:00:39,000\nand has something on the order of 30 billion pages.\n\n15\n00:00:39,000 --> 00:00:42,000\nTime for the first quiz.\n\n16\n00:00:42,000 --> 00:00:45,000\nWhat is the main type of document on the web?\n\n17\n00:00:45,000 --> 00:00:49,000\nIs it HTML? Microsoft Word documents? PDFs?\n\n18\n00:00:49,000 --> 00:00:52,000\nOr plain text?\n\n", "id": 6001}, "key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjZNgw", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/7001", "type": "Nugget", "id": 7001}, {"nuggetType": "lecture", "name": "World Wide Web Solution", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "9a0811e1-523c-4783-af93-8f0dc0d98041", "name": "cs253_unit1_01_s_World-Wide-Web", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch0LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGKIfDA", "youtube_id": "1SQhRSlHBfQ", "youtube_state": "done", "path": "Course/cs253/Media/4002", "transcript": "\ufeff1\n00:00:00,000 --> 00:00:02,000\nThe answer is HTML.\n\n2\n00:00:02,000 --> 00:00:05,000\nWhile all of these things can exist on the web,\n\n3\n00:00:05,000 --> 00:00:07,000\nany type of file can be linked to,\n\n4\n00:00:07,000 --> 00:00:12,000\nHTML documents are the basis for everything on the web.\n\n", "id": 4002}, "key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjBPgw", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/8001", "type": "Nugget", "id": 8001}, {"nuggetType": "lecture", "name": "Missing End Tag", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "b1fd0114-25dd-4492-bbf1-6cf666302767", "name": "cs253_unit1_09_q_Missing-End-Tag", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch0LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGMplDA", "youtube_id": "3b8kuTLo7fI", "youtube_state": "done", "path": "Course/cs253/Media/13002", "transcript": "\ufeff1\n00:00:00,000 --> 00:00:04,000\nLet's change it up a little bit: I'm going to delete this closing </em> tag,\n\n2\n00:00:04,000 --> 00:00:06,000\nand I'd like you to tell me what happens \n\n3\n00:00:06,000 --> 00:00:09,000\nwhen we don't have the closing </em> tag.\n\n4\n00:00:09,000 --> 00:00:11,000\nIn our previous example, we had an opening <em> tag \n\n5\n00:00:11,000 --> 00:00:13,000\nand I left off the closing tag.\n\n6\n00:00:13,000 --> 00:00:16,000\nWhat happens when we forget to close that <em> tag? \n\n7\n00:00:16,000 --> 00:00:18,000\nNothing is italicized,\n\n8\n00:00:18,000 --> 00:00:20,000\nthe browser crashes.\n\n9\n00:00:20,000 --> 00:00:24,000\nEverything after that opening <em> tag is italicized \n\n10\n00:00:24,000 --> 00:00:26,000\nor--I don't know--\n\n11\n00:00:26,000 --> 00:00:29,000\nyour guess is as good as mine. \n\n", "id": 13002}, "key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjCPgw", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/8002", "type": "Nugget", "id": 8002}, {"nuggetType": "lecture", "name": "User Agent Header", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "614f558b-f228-49c1-944f-e346d32dec94", "name": "cs253_unit1_25_q_User-Agent-Header", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch0LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGMM-DA", "youtube_id": "60rghaHLQX8", "youtube_state": "done", "path": "Course/cs253/Media/8003", "transcript": "\ufeff", "id": 8003}, "key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjEPgw", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/8004", "type": "Nugget", "id": 8004}, {"nuggetType": "quiz", "name": "Telnet Request", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjGPgw", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/8006", "type": "Nugget", "id": 8006}, {"nuggetType": "lecture", "name": "File Types", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "ab1a1ad4-bcb1-42ef-8bc7-9163f1e26ef3", "name": "cs253_unit1_02_q_File-Types", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch0LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGIsnDA", "youtube_id": "r6kZoASWmVo", "youtube_state": "done", "path": "Course/cs253/Media/5003", "transcript": "\ufeff1\n00:00:00,000 --> 00:00:01,000\nOkay--let's do another quiz.\n\n2\n00:00:01,000 --> 00:00:05,000\nAnd I promise these will get more challenging as we go.\n\n3\n00:00:05,000 --> 00:00:09,000\nNext question: what type of files can be found on the web?\n\n4\n00:00:09,000 --> 00:00:12,000\nCheck all that apply: plain text, HTML, images, videos, or music.\n\n", "id": 5003}, "key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBipRgw", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/9001", "type": "Nugget", "id": 9001}, {"nuggetType": "lecture", "name": "Italics", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "e7c6961b-56d0-4637-bd6d-8b8a3a5f8997", "name": "cs253_unit1_08_p_Italics", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch4LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGMG7AQw", "youtube_id": "6roKS8GwBwo", "youtube_state": "done", "path": "Course/cs253/Media/24001", "transcript": "\ufeff1\n00:00:00,000 --> 00:00:03,000\nI want to teach you about another tag--this one is called the \"em\" tag.\n\n2\n00:00:03,000 --> 00:00:06,000\nIt stands for \"emphasis\", and it makes things italic. \n\n3\n00:00:06,000 --> 00:00:08,000\nIt looks like this: \n\n4\n00:00:08,000 --> 00:00:10,000\nyou've got the opening <em> tag, contents--\n\n5\n00:00:10,000 --> 00:00:12,000\nand then the closing </em> tag, with a slash. \n\n6\n00:00:12,000 --> 00:00:16,000\nSame structure as the <bold> tag, nothing too complex here. \n\n7\n00:00:16,000 --> 00:00:18,000\nLet's try it out in a browser, really quick. \n\n8\n00:00:18,000 --> 00:00:20,000\nOkay--so here we are in our browser again.\n\n9\n00:00:20,000 --> 00:00:23,000\nLet's make the word \"learn\" italicized. \n\n10\n00:00:23,000 --> 00:00:27,000\nSo all I do is I put an opening <em> tag,\n\n11\n00:00:27,000 --> 00:00:30,000\nand then I put a closing </em> tag--and I hit Update.\n\n12\n00:00:30,000 --> 00:00:35,000\nAnd that took the word \"learn\" and made it italicized. \n\n13\n00:00:35,000 --> 00:00:37,000\nWhat I'd like you to do is\n\n14\n00:00:37,000 --> 00:00:42,000\ntake the whole phrase below and make it italic.\n\n", "id": 24001}, "key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiqRgw", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/9002", "type": "Nugget", "id": 9002}, {"nuggetType": "lecture", "name": "Introducing Urls", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "91c2776d-204f-4355-be0d-ba6b6e91a54b", "name": "cs253_unit1_17_l_Introducing-URLs", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch0LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGKtGDA", "youtube_id": "YZ1ehlah5GM", "youtube_state": "done", "path": "Course/cs253/Media/9003", "transcript": "\ufeff1\n00:00:00,000 --> 00:00:02,000\nLet's talk about URLs. \n\n2\n00:00:02,000 --> 00:00:04,000\nUndoubtedly, you've seen URLs before. \n\n3\n00:00:04,000 --> 00:00:08,000\nURL stands for Uniform Resource Locator.\n\n4\n00:00:08,000 --> 00:00:11,000\nAn example URL would be as follows: \n\n5\n00:00:11,000 --> 00:00:13,000\nThis is an example URL.\n\n6\n00:00:13,000 --> 00:00:16,000\nIt's got three main parts: it's got the Protocol, \n\n7\n00:00:16,000 --> 00:00:19,000\nseparated by a colon and two slashes\n\n8\n00:00:19,000 --> 00:00:23,000\nfrom the host--which precedes the Path. \n\n9\n00:00:23,000 --> 00:00:26,000\nAnd in this case, the Path is just a slash. \n\n10\n00:00:26,000 --> 00:00:28,000\nAnd if we didn't have that slash there, \n\n11\n00:00:28,000 --> 00:00:31,000\nthe Path would still be a slash because that's the minimum Path. \n\n12\n00:00:31,000 --> 00:00:33,000\nNow, the Protocol can be a number of things, \n\n13\n00:00:33,000 --> 00:00:37,000\nbut for our purposes, it's going to be http almost all the time. \n\n14\n00:00:37,000 --> 00:00:40,000\nWe'll also see https from time to time,\n\n15\n00:00:40,000 --> 00:00:42,000\nand you'll see other protocols around the Web. \n\n16\n00:00:42,000 --> 00:00:45,000\nYou might see ftp or things like that--\n\n17\n00:00:45,000 --> 00:00:48,000\nbut http basically means--you know--the Web. \n\n18\n00:00:48,000 --> 00:00:50,000\nThat's what we're going to be learning in this class. \n\n19\n00:00:50,000 --> 00:00:53,000\nThe host--this is the host name or domain name \n\n20\n00:00:53,000 --> 00:00:56,000\nof the Server that has the document we want to access. \n\n21\n00:00:56,000 --> 00:00:58,000\nThis can also be an IP address.\n\n22\n00:00:58,000 --> 00:01:01,000\nThis host just, of course, translates into an IP address--\n\n23\n00:01:01,000 --> 00:01:05,000\nand this is the description of the location of the physical machine \n\n24\n00:01:05,000 --> 00:01:07,000\nthat has the document we want to fetch. \n\n25\n00:01:07,000 --> 00:01:10,000\nAnd the Path is the document we're going to fetch. \n\n26\n00:01:10,000 --> 00:01:12,000\nNow the Path can be more complicated,\n\n27\n00:01:12,000 --> 00:01:15,000\nso the Path would be this whole thing--\n\n28\n00:01:15,000 --> 00:01:20,000\nif we were accessing the image we were using in the previous part of the lecture. \n\n", "id": 9003}, "key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBisRgw", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/9004", "type": "Nugget", "id": 9004}, {"nuggetType": "program", "name": "Whitespace", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBitRgw", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/9005", "suppliedCode": null, "type": "Nugget", "id": 9005}, {"nuggetType": "lecture", "name": "File Types Solution", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "0b2473bf-0ae6-4bd6-a961-a8dd23eef586", "name": "cs253_unit1_02_s_File-Types", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch0LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGJFODA", "youtube_id": "ptYKOo3rldk", "youtube_state": "done", "path": "Course/cs253/Media/10001", "transcript": "\ufeff1\n00:00:00,000 --> 00:00:03,000\nThe answer is all of the above.\n\n2\n00:00:03,000 --> 00:00:06,000\nAs I said, anything can exist on the web,\n\n3\n00:00:06,000 --> 00:00:09,000\nwhile HTML is the main type of content,\n\n4\n00:00:09,000 --> 00:00:12,000\nyou can link to whatever you like,\n\n5\n00:00:12,000 --> 00:00:14,000\nand these are all perfectly fine examples.\n\n", "id": 10001}, "key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiSTgw", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/10002", "type": "Nugget", "id": 10002}, {"nuggetType": "lecture", "name": "Query Parameters Solution", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "20b69e41-a0ba-4628-9b5d-73aafc8d6542", "name": "cs253_unit1_19_s_Query-Parameters", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch0LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGNo2DA", "youtube_id": "sTbgSZT-0DA", "youtube_state": "done", "path": "Course/cs253/Media/7002", "transcript": "\ufeff1\n00:00:00,000 --> 00:00:02,000\nThe correct answer is \"p\".\n\n2\n00:00:02,000 --> 00:00:05,000\nThere's nothing fancy going on, where--you know--\n\n3\n00:00:05,000 --> 00:00:08,000\np = foo, and then--you know--because z = p, z also equals foo. \n\n4\n00:00:08,000 --> 00:00:10,000\nThere's not that level of computation. \n\n5\n00:00:10,000 --> 00:00:13,000\nNow if the Server wants to do that down the road, that's fine. \n\n6\n00:00:13,000 --> 00:00:17,000\nBut, in the general case, z just equals the letter \"p\"--\n\n7\n00:00:17,000 --> 00:00:20,000\nand that's it. \n\n", "id": 7002}, "key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBj7VQw", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/11003", "type": "Nugget", "id": 11003}, {"nuggetType": "lecture", "name": "Components Of The Web", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "602396de-eea8-4542-a3dc-6e7bbbc7c80d", "name": "cs253_unit1_03_q_Components-of-the-Web", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch0LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGPlVDA", "youtube_id": "7bGPcVSmy_U", "youtube_state": "done", "path": "Course/cs253/Media/11001", "transcript": "\ufeff1\n00:00:00,000 --> 00:00:02,000\nOkay--let's take a step back for a second and talk about\n\n2\n00:00:02,000 --> 00:00:06,000\nthe major pieces of the web--\n\n3\n00:00:06,000 --> 00:00:10,000\nor the major concepts we're going to be discussing in this lesson.\n\n4\n00:00:10,000 --> 00:00:15,000\nThe major pieces are you, your computer running a web browser,\n\n5\n00:00:15,000 --> 00:00:17,000\nthe internet, and servers.\n\n6\n00:00:17,000 --> 00:00:21,000\nYour browser makes requests via the internet to servers.\n\n7\n00:00:21,000 --> 00:00:25,000\nThese requests are using a protocol called HTTP,\n\n8\n00:00:25,000 --> 00:00:29,000\nand the servers respond with files that your browser displays.\n\n9\n00:00:29,000 --> 00:00:33,000\nSome examples of browsers are Internet Explorer,\n\n10\n00:00:33,000 --> 00:00:35,000\nChrome, Firefox.\n\n11\n00:00:35,000 --> 00:00:38,000\nYou're probably running one of those right now.\n\n12\n00:00:38,000 --> 00:00:41,000\nThe servers are computers just like yours,\n\n13\n00:00:41,000 --> 00:00:46,000\n except they are optimized for sitting in a closet and hosting files,\n\n14\n00:00:46,000 --> 00:00:48,000\nrather than sitting on your desk--you know--\n\n15\n00:00:48,000 --> 00:00:49,000\nbrowsing these files.\n\n16\n00:00:49,000 --> 00:00:52,000\nAnd the protocol HTTP that we're speaking \n\n17\n00:00:52,000 --> 00:00:54,000\nis just a very simple protocol that your browser uses\n\n18\n00:00:54,000 --> 00:00:57,000\nto communicate with these servers.\n\n19\n00:00:57,000 --> 00:00:58,000\nWe'll discuss each of these pieces--\n\n20\n00:00:58,000 --> 00:01:02,000\nwell, we won't spend a whole lot of time of the internet, but--\n\n21\n00:01:02,000 --> 00:01:04,000\nwe'll discuss each of these pieces in turn throughout this lesson.\n\n22\n00:01:04,000 --> 00:01:07,000\nOkay, time for another quiz.\n\n23\n00:01:07,000 --> 00:01:10,000\nWhat I'd like you to do is take the letters\n\n24\n00:01:10,000 --> 00:01:13,000\n that are near each piece of technology we just discussed\n\n25\n00:01:13,000 --> 00:01:15,000\nand match them up with their name and definition.\n\n26\n00:01:15,000 --> 00:01:19,000\nYour options are: HTTP--the main protocol of the web,\n\n27\n00:01:19,000 --> 00:01:24,000\n servers--computers that host the files that make up the web,\n\n28\n00:01:24,000 --> 00:01:27,000\nthe internet--the world's largest computer network,\n\n29\n00:01:27,000 --> 00:01:30,000\nand your browser--a program that runs on your computer\n\n30\n00:01:30,000 --> 00:01:33,000\nto display files found on the web.\n\n31\n00:01:33,000 --> 00:01:35,000\nTake the letters next to each piece of technology,\n\n32\n00:01:35,000 --> 00:01:39,000\nand put them in the correct box.\n\n", "id": 11001}, "key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjhXQw", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/12001", "type": "Nugget", "id": 12001}, {"nuggetType": "lecture", "name": "Making Links", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "3d478b00-15b9-4ecc-8c62-5f99aa0de4d2", "name": "cs253_unit1_10_p_Making-Links", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch0LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGPIuDA", "youtube_id": "21VeS6otY6w", "youtube_state": "done", "path": "Course/cs253/Media/6002", "transcript": "\ufeff1\n00:00:00,000 --> 00:00:02,000\nOkay--I'd like to teach you about a new concept.\n\n2\n00:00:02,000 --> 00:00:04,000\nThese are called \"HTML Attributes\". \n\n3\n00:00:04,000 --> 00:00:06,000\nThey look something like this.\n\n4\n00:00:06,000 --> 00:00:09,000\nWe still have our opening TAG name\n\n5\n00:00:09,000 --> 00:00:11,000\nand our closing </TAG>, as before--with the slash. \n\n6\n00:00:11,000 --> 00:00:13,000\nBut we have a new thing, called an \"Attribute\". \n\n7\n00:00:13,000 --> 00:00:15,000\nAttributes have a name.\n\n8\n00:00:15,000 --> 00:00:17,000\nIn this case, I just called it: ATTR equals--\n\n9\n00:00:17,000 --> 00:00:20,000\nand then you've got quotes, and a value is inside the quotes. \n\n10\n00:00:20,000 --> 00:00:23,000\nAnd attributes, these days, always equal a value. \n\n11\n00:00:23,000 --> 00:00:25,000\nIt didn't used to be the case, to be honest, but everything we're going to do \n\n12\n00:00:25,000 --> 00:00:27,000\nequals a value. \n\n13\n00:00:27,000 --> 00:00:30,000\nAnd tags can actually have multiple attributes. \n\n14\n00:00:30,000 --> 00:00:32,000\nAn example of a tag that uses an attribute \n\n15\n00:00:32,000 --> 00:00:35,000\nis the Anchor tag--which is the <a> tag. \n\n16\n00:00:35,000 --> 00:00:37,000\nAnd a full example looks something like this:\n\n17\n00:00:37,000 --> 00:00:39,000\nYou've got the opening \"<a\", \n\n18\n00:00:39,000 --> 00:00:43,000\nyou've got an attribute called \"href\", \n\n19\n00:00:43,000 --> 00:00:46,000\nyou've got its value--which, in this case, is a URL;\n\n20\n00:00:46,000 --> 00:00:48,000\nyou've got the contents, \n\n21\n00:00:48,000 --> 00:00:50,000\nand then you've got the closing anchor tag. \n\n22\n00:00:50,000 --> 00:00:52,000\nSo if we were to render this in HTML, we would just \n\n23\n00:00:52,000 --> 00:00:56,000\nsee the word, \"derp\"--but it would be a link to \"reddit.com\".\n\n24\n00:00:56,000 --> 00:00:59,000\nAnchors are for making links. \n\n25\n00:00:59,000 --> 00:01:01,000\nLet's play around with this in our browser a little bit \n\n26\n00:01:01,000 --> 00:01:04,000\nand see it in action. \n\n27\n00:01:04,000 --> 00:01:06,000\nOkay. So we've got our HTML from before.\n\n28\n00:01:06,000 --> 00:01:08,000\nI'm going to clean out some of these tags here\n\n29\n00:01:08,000 --> 00:01:11,000\nso we have a little bit more room to work. \n\n30\n00:01:11,000 --> 00:01:15,000\nLet's make the words \"HTML\", here, a link. \n\n31\n00:01:15,000 --> 00:01:18,000\nSo we're going to make an opening <a> tag,\n\n32\n00:01:18,000 --> 00:01:24,000\nan \"href\" to \"www.w3c.org/html\", \n\n33\n00:01:24,000 --> 00:01:26,000\nand a closing </a> tag. \n\n34\n00:01:26,000 --> 00:01:28,000\nWhen we render this, \n\n35\n00:01:28,000 --> 00:01:30,000\nwe see that HTML has turned into a link\n\n36\n00:01:30,000 --> 00:01:32,000\nand if I were to click this\n\n37\n00:01:32,000 --> 00:01:36,000\nit would open this page--\"w3c.org\"--\n\n38\n00:01:36,000 --> 00:01:39,000\nand a new window--pretty neat, huh? \n\n39\n00:01:39,000 --> 00:01:42,000\nOkay. So quick quiz: \n\n40\n00:01:42,000 --> 00:01:44,000\nTake the phrase below--\n\n41\n00:01:44,000 --> 00:01:46,000\nwe'll take the words, \"my favorite\" from the phrase below--\n\n42\n00:01:46,000 --> 00:01:52,000\nand make those words a link to \"udacity.com\". \n\n", "id": 6002}, "key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjiXQw", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/12002", "type": "Nugget", "id": 12002}, {"nuggetType": "lecture", "name": "Get Solution", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "666fa0b8-597b-470a-a39e-21b867112f4a", "name": "cs253_unit1_22_s_GET", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch4LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGPzSAQw", "youtube_id": "CfrUjdDOwMI", "youtube_state": "done", "path": "Course/cs253/Media/27004", "transcript": "\ufeff1\n00:00:00,000 --> 00:00:07,000\nThe answer is: GET /foo/logo.png?p=1 HTTP/1.1\n\n2\n00:00:07,000 --> 00:00:11,000\nNow--the GET makes sense, that this is the method we're using. \n\n3\n00:00:11,000 --> 00:00:14,000\nThe version is pretty simple--that was specified in the question. \n\n4\n00:00:14,000 --> 00:00:16,000\nNow the path is a little tricky. \n\n5\n00:00:16,000 --> 00:00:20,000\nThe path includes this much here,\n\n6\n00:00:20,000 --> 00:00:23,000\nbut the fragments are not included in the path--they're never sent to the Server.\n\n7\n00:00:23,000 --> 00:00:27,000\nSo when your browser makes a request for this path, \n\n8\n00:00:27,000 --> 00:00:30,000\nthis is all it sends to <example.com>. \n\n9\n00:00:30,000 --> 00:00:35,000\nThe fragment and the hash mark stay purely on the client side\n\n10\n00:00:35,000 --> 00:00:38,000\nor also known as in the browser. \n\n", "id": 27004}, "key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjMZQw", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/13004", "type": "Nugget", "id": 13004}, {"nuggetType": "lecture", "name": "Most Common Method Solution", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "35a1b475-bcb1-42d7-b271-e48b8843c5ad", "name": "cs253_unit1_23_s_Most-Common-Method", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch4LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGLqUAQw", "youtube_id": "0148ys65xkQ", "youtube_state": "done", "path": "Course/cs253/Media/19002", "transcript": "\ufeff", "id": 19002}, "key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjOZQw", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/13006", "type": "Nugget", "id": 13006}, {"nuggetType": "quiz", "name": "Missing End Tag", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjRZQw", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/13009", "type": "Nugget", "id": 13009}, {"nuggetType": "program", "name": "Making Links", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjTZQw", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/13011", "suppliedCode": null, "type": "Nugget", "id": 13011}, {"nuggetType": "lecture", "name": "Paragraph Tag Solution", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "92f47549-d742-4dbb-94d0-c81bc7e5ccda", "name": "cs253_unit1_13_s_Paragraph-Tag", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch4LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGPKrAQw", "youtube_id": "sGVc6MyJvNo", "youtube_state": "done", "path": "Course/cs253/Media/22002", "transcript": "\ufeff1\n00:00:00,000 --> 00:00:03,000\nAnd the answer should look something like this: we've got an opening paragraph,\n\n2\n00:00:03,000 --> 00:00:06,000\nsome text, a closing paragraph--that's our line 1.\n\n3\n00:00:06,000 --> 00:00:09,000\nAnd then we've got another opening paragraph--line 2--\n\n4\n00:00:09,000 --> 00:00:11,000\nand then the closing paragraph.\n\n5\n00:00:11,000 --> 00:00:14,000\nNot too tricky, I hope. \n\n", "id": 22002}, "key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiybQw", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/14002", "type": "Nugget", "id": 14002}, {"nuggetType": "lecture", "name": "Query Parameters", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "164083a3-fd0e-436e-96dc-2f4128830523", "name": "cs253_unit1_19_q_Query-Parameters", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch4LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGMO7AQw", "youtube_id": "zUrQGIClA9w", "youtube_state": "done", "path": "Course/cs253/Media/24003", "transcript": "\ufeff1\n00:00:00,000 --> 00:00:02,000\nOkay. Let's add something new to our URLs, \n\n2\n00:00:02,000 --> 00:00:04,000\ncalled a Query parameter--\n\n3\n00:00:04,000 --> 00:00:06,000\nalso known as GET parameters--\n\n4\n00:00:06,000 --> 00:00:08,000\nand we'll talk about this name shortly,\n\n5\n00:00:08,000 --> 00:00:10,000\nwhen we start talking about http.\n\n6\n00:00:10,000 --> 00:00:12,000\nHere is an example: \n\n7\n00:00:12,000 --> 00:00:14,000\nWe've got our normal URL--\n\n8\n00:00:14,000 --> 00:00:16,000\nor the type of the simple URL we just discussed--\n\n9\n00:00:16,000 --> 00:00:18,000\nwith a simple Path, /foo, \n\n10\n00:00:18,000 --> 00:00:21,000\nand we've added, to the end of this, ?p=1. \n\n11\n00:00:21,000 --> 00:00:26,000\nAnd this adds an extra parameter, whose name is \"p\" and whose value is \"1\". \n\n12\n00:00:26,000 --> 00:00:28,000\nThe format of the Query parameter looks like this: \n\n13\n00:00:28,000 --> 00:00:30,000\nYou've got \"Name = value\"\n\n14\n00:00:30,000 --> 00:00:32,000\nor in this case, \"p=1\".\n\n15\n00:00:32,000 --> 00:00:34,000\nAnd the value can be just about anything, \n\n16\n00:00:34,000 --> 00:00:38,000\nbut it's good not to use question marks and other URL characters;\n\n17\n00:00:38,000 --> 00:00:40,000\nalthough you could, if you really wanted. \n\n18\n00:00:40,000 --> 00:00:43,000\nWe can make this a little bit more complicated, by adding more Query parameters. \n\n19\n00:00:43,000 --> 00:00:46,000\nLet's do that--we've added a second Query parameter. \n\n20\n00:00:46,000 --> 00:00:49,000\nThe first Query parameter is separated from the URL, \n\n21\n00:00:49,000 --> 00:00:52,000\nusing a question mark.\n\n22\n00:00:52,000 --> 00:00:54,000\nAll the following parameters are separated from each other, \n\n23\n00:00:54,000 --> 00:00:56,000\nusing ampersands.\n\n24\n00:00:56,000 --> 00:00:58,000\nThe first one gets a question mark, the next one gets an ampersand. \n\n25\n00:00:58,000 --> 00:01:03,000\nIn this case, the new parameter is \"q\" and it equals the string, \"neat\". \n\n26\n00:01:03,000 --> 00:01:06,000\nSo we have these Query parameters--what are they for?\n\n27\n00:01:06,000 --> 00:01:09,000\nThey're for--basically, when you make a request for this Path, \n\n28\n00:01:09,000 --> 00:01:11,000\nthis is extra information the Server gets.\n\n29\n00:01:11,000 --> 00:01:14,000\nAnd there's all sorts of things you can do with this. \n\n30\n00:01:14,000 --> 00:01:16,000\nIf this is a Web application, doing fancy things, \n\n31\n00:01:16,000 --> 00:01:18,000\nthese parameters might mean something.\n\n32\n00:01:18,000 --> 00:01:20,000\nIt can affect caching--\n\n33\n00:01:20,000 --> 00:01:22,000\nbecause, technically, it changes the entire URL. \n\n34\n00:01:22,000 --> 00:01:24,000\nSo there are all sorts of handy uses,\n\n35\n00:01:24,000 --> 00:01:26,000\nthat we'll discuss later in the class,\n\n36\n00:01:26,000 --> 00:01:28,000\nfor what these Query parameters can do. \n\n37\n00:01:28,000 --> 00:01:30,000\nBut they're separate from the Path--\n\n38\n00:01:30,000 --> 00:01:33,000\nbut they are included in part of the whole URL\n\n39\n00:01:33,000 --> 00:01:36,000\nthat the Servers use when you make a request. \n\n40\n00:01:36,000 --> 00:01:40,000\nIn the following URL, what is the value of the z parameter? \n\n41\n00:01:40,000 --> 00:01:43,000\nHere is your URL. \n\n", "id": 24003}, "key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBi0bQw", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/14004", "type": "Nugget", "id": 14004}, {"nuggetType": "lecture", "name": "Making Requests", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "70253559-d60d-405e-bd33-ef0e38123a0a", "name": "cs253_unit1_24_l_Making-Requests", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch0LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGI8nDA", "youtube_id": "ULofYLWKhvc", "youtube_state": "done", "path": "Course/cs253/Media/5007", "transcript": "\ufeff", "id": 5007}, "key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBi1bQw", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/14005", "type": "Nugget", "id": 14005}, {"nuggetType": "lecture", "name": "Valid Headers", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "1fd520e7-1f07-4068-aedb-0932f7c7407b", "name": "cs253_unit1_26_q_Valid-Headers", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch4LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGPOrAQw", "youtube_id": "Ktz7w3PXQPU", "youtube_state": "done", "path": "Course/cs253/Media/22003", "transcript": "\ufeff", "id": 22003}, "key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBi2bQw", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/14006", "type": "Nugget", "id": 14006}, {"nuggetType": "quiz", "name": "Dynamic Content", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBi3bQw", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/14007", "type": "Nugget", "id": 14007}, {"nuggetType": "lecture", "name": "Correct Url Solution", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "459c920c-a38e-46e0-b9b6-b6780aeaa188", "name": "cs253_unit1_18_s_Correct-URL", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch0LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGMtlDA", "youtube_id": "KGG0AToPV8Q", "youtube_state": "done", "path": "Course/cs253/Media/13003", "transcript": "\ufeff1\n00:00:00,000 --> 00:00:07,000\nThe correct answer is: ftp://www.udacity.com/about.\n\n2\n00:00:07,000 --> 00:00:09,000\nNice work. \n\n", "id": 13003}, "key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBicdQw", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/15004", "type": "Nugget", "id": 15004}, {"nuggetType": "lecture", "name": "Fragments", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "bfffdf92-8439-4e84-bceb-18027fbca3cf", "name": "cs253_unit1_20_l_Fragments", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch0LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGJ11DA", "youtube_id": "FDAuuoGWeYI", "youtube_state": "done", "path": "Course/cs253/Media/15005", "transcript": "\ufeff1\n00:00:00,000 --> 00:00:03,000\nOkay. I want to add one more piece to our URLs, \n\n2\n00:00:03,000 --> 00:00:05,000\nand that's called a \"fragment\". \n\n3\n00:00:05,000 --> 00:00:08,000\nA fragment is separated from the rest of the URL by a hash sign. \n\n4\n00:00:08,000 --> 00:00:10,000\nA fragment is generally used to reference \n\n5\n00:00:10,000 --> 00:00:14,000\na particular part of the page you are looking at.\n\n6\n00:00:14,000 --> 00:00:18,000\nThere are other fancier uses if you're going to do some complex JavaScript things. \n\n7\n00:00:18,000 --> 00:00:21,000\nBut, for our purposes, it's just there\n\n8\n00:00:21,000 --> 00:00:24,000\nand all I really want you to know is that when you see it in the URL,\n\n9\n00:00:24,000 --> 00:00:26,000\nit is not sent to the server when you make a request. \n\n10\n00:00:26,000 --> 00:00:30,000\nThe fragment purely exists in the browser. \n\n11\n00:00:30,000 --> 00:00:33,000\nIf we had a URL with both queries and a fragment--\n\n12\n00:00:33,000 --> 00:00:35,000\nI'll show you how that looks. \n\n13\n00:00:35,000 --> 00:00:38,000\nWhen there are query parameters, the fragment follows the query parameters.\n\n14\n00:00:38,000 --> 00:00:40,000\nIt comes last. \n\n", "id": 15005}, "key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiedQw", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/15006", "type": "Nugget", "id": 15006}, {"nuggetType": "lecture", "name": "Dynamic Content Solution", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "8fb1d6e0-799c-4dce-b4ce-559284118022", "name": "cs253_unit1_31_s_Dynamic-Content", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch0LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGM9lDA", "youtube_id": "wiXkGDu7oTc", "youtube_state": "done", "path": "Course/cs253/Media/13007", "transcript": "\ufeff", "id": 13007}, "key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBigdQw", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/15008", "type": "Nugget", "id": 15008}, {"nuggetType": "lecture", "name": "Best Browser Solution", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "e56e9766-fc30-41e3-a559-e89464918597", "name": "cs253_unit1_04_s_Best-Browser", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch0LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGJl1DA", "youtube_id": "xeYLxIA_Jc0", "youtube_state": "done", "path": "Course/cs253/Media/15001", "transcript": "\ufeff1\n00:00:00,000 --> 00:00:01,000\nAnd the answer is:\n\n2\n00:00:01,000 --> 00:00:02,000\nNone of them.\n\n3\n00:00:02,000 --> 00:00:03,000\nThis is more than just a trick question.\n\n4\n00:00:03,000 --> 00:00:08,000\nThe point I'm trying to make is that all of these browsers are a little different,\n\n5\n00:00:08,000 --> 00:00:09,000\nand if you've used more than one of them, \n\n6\n00:00:09,000 --> 00:00:12,000\nyou'll know that that's obviously true.\n\n7\n00:00:12,000 --> 00:00:14,000\nHowever, none of these browsers are perfect,\n\n8\n00:00:14,000 --> 00:00:17,000\nand in fact, it's not even clear, when we're doing web development,\n\n9\n00:00:17,000 --> 00:00:19,000\nwhat perfect is.\n\n10\n00:00:19,000 --> 00:00:24,000\nIt's a very imperfect art--web design is.\n\n11\n00:00:24,000 --> 00:00:26,000\nAnd so, while you may have a preference for one of these browsers,\n\n12\n00:00:26,000 --> 00:00:30,000\nit is not necessarily true that your users agree.\n\n13\n00:00:30,000 --> 00:00:31,000\nYou know--you may like Chrome,\n\n14\n00:00:31,000 --> 00:00:34,000\n and your users may prefer Internet Explorer.\n\n15\n00:00:34,000 --> 00:00:36,000\nOr--more realistically--you may like Chrome\n\n16\n00:00:36,000 --> 00:00:39,000\nand your users are forced to use Internet Explorer.\n\n17\n00:00:39,000 --> 00:00:42,000\nSo, you need to have in mind that all of these browsers are different,\n\n18\n00:00:42,000 --> 00:00:45,000\nthey all behave differently, and you need to keep that in mind\n\n19\n00:00:45,000 --> 00:00:48,000\nas you develop and test in--as many browsers as you can.\n\n", "id": 15001}, "key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiBfQw", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/16001", "type": "Nugget", "id": 16001}, {"nuggetType": "lecture", "name": "Whitespace Solution", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "53cb4ad0-7b08-4fb7-a476-a5eb0eb67def", "name": "cs253_unit1_12_s_Whitespace", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch4LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGPrSAQw", "youtube_id": "NPsSMwg6Hk0", "youtube_state": "done", "path": "Course/cs253/Media/27002", "transcript": "\ufeff1\n00:00:00,000 --> 00:00:02,000\nOkay--so the answer looks something like this: we've got the string, \n\n2\n00:00:02,000 --> 00:00:04,000\n\"Hello everyone!\",\n\n3\n00:00:04,000 --> 00:00:06,000\nthe <br> tag--and then more text: \n\n4\n00:00:06,000 --> 00:00:08,000\n\"We're using two lines now!\"\n\n5\n00:00:08,000 --> 00:00:10,000\nPretty simple.\n\n", "id": 27002}, "key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiCfQw", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/16002", "type": "Nugget", "id": 16002}, {"nuggetType": "quiz", "name": "Best Browser", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiDfQw", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/16003", "type": "Nugget", "id": 16003}, {"nuggetType": "quiz", "name": "Get", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiFfQw", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/16005", "type": "Nugget", "id": 16005}, {"nuggetType": "quiz", "name": "User Agent Header", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "key": "agpzfnVkYWNpdHl1cj8LEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiGfQw", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/16006", "type": "Nugget", "id": 16006}, {"nuggetType": "quiz", "name": "Most Common Method", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjshAEM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/17004", "type": "Nugget", "id": 17004}, {"nuggetType": "lecture", "name": "Intro To Html", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "fa23c55f-0899-4bf0-8b69-6649525364b2", "name": "cs253_unit1_05_l_Intro-to-HTML", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch4LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGOmEAQw", "youtube_id": "TronIx9tIqk", "youtube_state": "done", "path": "Course/cs253/Media/17001", "transcript": "\ufeff1\n00:00:00,000 --> 00:00:02,000\nOkay, guys, we are going to discuss HTML.\n\n2\n00:00:02,000 --> 00:00:05,000\nOr, HyperText Markup Language.\n\n3\n00:00:05,000 --> 00:00:09,000\nHTML documents are the heart of the web.\n\n4\n00:00:09,000 --> 00:00:11,000\nThe web is basically made up of these documents\n\n5\n00:00:11,000 --> 00:00:13,000\nthat can do a number of things.\n\n6\n00:00:13,000 --> 00:00:17,000\nSo HTML is made up of text content, which is \n\n7\n00:00:17,000 --> 00:00:20,000\nwhat you see, it's made up of markup,\n\n8\n00:00:20,000 --> 00:00:22,000\nwhich is what that content looks like,\n\n9\n00:00:22,000 --> 00:00:24,000\nor how it's arranged,\n\n10\n00:00:24,000 --> 00:00:26,000\nit's made up of references to other documents,\n\n11\n00:00:26,000 --> 00:00:28,000\nlike images and videos,\n\n12\n00:00:28,000 --> 00:00:29,000\nyou may have something that looks like this,\n\n13\n00:00:29,000 --> 00:00:33,000\nand you've got some text, and you'll have an image in your page, \n\n14\n00:00:33,000 --> 00:00:35,000\nor like the page you're looking at now,\n\n15\n00:00:35,000 --> 00:00:36,000\nwhich has got a video in the middle of it.\n\n16\n00:00:36,000 --> 00:00:37,000\nYou know--the page you're looking at now,\n\n17\n00:00:37,000 --> 00:00:39,000\nit's made up of HTML, and it's got references \n\n18\n00:00:39,000 --> 00:00:42,000\nto a big fat video.\n\n19\n00:00:42,000 --> 00:00:44,000\nAnd it can be made up of links to other pages.\n\n20\n00:00:44,000 --> 00:00:47,000\nAnd I'm sure you're very familiar with what links are,\n\n21\n00:00:47,000 --> 00:00:49,000\nand how they are used.\n\n22\n00:00:49,000 --> 00:00:52,000\nLet's play around with HTML a little bit.\n\n23\n00:00:52,000 --> 00:00:54,000\nThis is a simple HTML editor we have\n\n24\n00:00:54,000 --> 00:00:57,000\n so we can play with things and test them out.\n\n25\n00:00:57,000 --> 00:00:59,000\nYou can follow along by either,\n\n26\n00:00:59,000 --> 00:01:02,000\nI think there should be a link in the course notes,\n\n27\n00:01:02,000 --> 00:01:09,000\nor you can also go to www.udacity.com/html_playground\n\n28\n00:01:09,000 --> 00:01:12,000\nand that should get you this little page\n\n29\n00:01:12,000 --> 00:01:14,000\n where you can kind of experiment a little bit.\n\n30\n00:01:14,000 --> 00:01:17,000\nThis is kind of a fake little test browser.\n\n31\n00:01:17,000 --> 00:01:18,000\nSo, the first thing I'd like to show you \n\n32\n00:01:18,000 --> 00:01:21,000\nis that if we have just some blank text,\n\n33\n00:01:21,000 --> 00:01:24,000\nif we were to render this as HTML,\n\n34\n00:01:24,000 --> 00:01:27,000\nit would look the same.\n\n35\n00:01:27,000 --> 00:01:31,000\nPlain text is plain text in HTML--for the most part.\n\n36\n00:01:31,000 --> 00:01:33,000\nBut if we want to make the text look different\n\n37\n00:01:33,000 --> 00:01:35,000\nwe need to use something called markup,\n\n38\n00:01:35,000 --> 00:01:38,000\nwhich is one of the other facets of HTML,\n\n39\n00:01:38,000 --> 00:01:41,000\nand let's learn a little bit about markup.\n\n", "id": 17001}, "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjRjAEM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/18001", "type": "Nugget", "id": 18001}, {"nuggetType": "lecture", "name": "Span And Div", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "67d02118-7e8c-4ee0-8acc-602cb2d09211", "name": "cs253_unit1_15_q_Span-and-Div", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch4LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGJnyAQw", "youtube_id": "kb4n5xOpVck", "youtube_state": "done", "path": "Course/cs253/Media/31001", "transcript": "\ufeff1\n00:00:00,000 --> 00:00:03,000\nTwo more elements I'd like to teach you--these are called \"span\" and \"div\". \n\n2\n00:00:03,000 --> 00:00:05,000\n<span> and <div> are both normal elements. \n\n3\n00:00:05,000 --> 00:00:08,000\nThey can both have content and the only difference between these two \n\n4\n00:00:08,000 --> 00:00:10,000\nis <span> is inline \n\n5\n00:00:10,000 --> 00:00:12,000\nand <div> is block. \n\n6\n00:00:12,000 --> 00:00:14,000\nWe'll play around with these in the Editor a little bit, \n\n7\n00:00:14,000 --> 00:00:16,000\nbut these are basically--\n\n8\n00:00:16,000 --> 00:00:20,000\nthese elements don't do anything other than just contain their content. \n\n9\n00:00:20,000 --> 00:00:23,000\nAnd there's a way to attach styles to them,\n\n10\n00:00:23,000 --> 00:00:26,000\nto adjust different behaviors of how they display. \n\n11\n00:00:26,000 --> 00:00:28,000\nThat looks something like this.\n\n12\n00:00:28,000 --> 00:00:30,000\nSo you can see, I've added two attributes--\n\n13\n00:00:30,000 --> 00:00:32,000\nor an attribute to each of these, called \"class\". \n\n14\n00:00:32,000 --> 00:00:34,000\nAnd this is a CSS class, \n\n15\n00:00:34,000 --> 00:00:38,000\nand this is not something we're going to spend a whole lot of time on in this course.\n\n16\n00:00:38,000 --> 00:00:40,000\nI'll provide most of the CSS,\n\n17\n00:00:40,000 --> 00:00:44,000\nbut it's a separate language for adding styles to your documents\n\n18\n00:00:44,000 --> 00:00:47,000\nor changing how different text looks. \n\n19\n00:00:47,000 --> 00:00:50,000\nAnd we'll be using <spans> and <divs> a lot\n\n20\n00:00:50,000 --> 00:00:53,000\nfor controlling how text is laid out. \n\n21\n00:00:53,000 --> 00:00:55,000\nBut the important thing to remember is that <spans> are inline \n\n22\n00:00:55,000 --> 00:00:58,000\nand <divs> are block.\n\n23\n00:00:58,000 --> 00:01:00,000\nLet's play around with these in a browser a little bit--real quick--\n\n24\n00:01:00,000 --> 00:01:02,000\nso you can see what I'm talking about.\n\n25\n00:01:02,000 --> 00:01:04,000\nOkay. So we've got our text \n\n26\n00:01:04,000 --> 00:01:06,000\nand our first line is wrapped in <span>--\n\n27\n00:01:06,000 --> 00:01:12,000\nand it behaves as we would expect an inline element to behave. \n\n28\n00:01:12,000 --> 00:01:17,000\nNow if I were to change this <span> to a <div>, \n\n29\n00:01:17,000 --> 00:01:22,000\nit behaves more like how the paragraph tag before behaved. \n\n30\n00:01:22,000 --> 00:01:28,000\nThis <div> actually creates a box around this piece of text. \n\n31\n00:01:28,000 --> 00:01:30,000\nAnd you can see--we actually did something interesting.\n\n32\n00:01:30,000 --> 00:01:32,000\nI added a little period after the <div>\n\n33\n00:01:32,000 --> 00:01:37,000\nand the period up here is down on the second line here.\n\n34\n00:01:37,000 --> 00:01:39,000\nWhat I'd like you to do is check all of the elements that are inline. \n\n35\n00:01:39,000 --> 00:01:42,000\nSome of these elements you haven't seen before, \n\n36\n00:01:42,000 --> 00:01:46,000\nso I would like you to try them out in your own browser \n\n37\n00:01:46,000 --> 00:01:50,000\nand figure it out for yourself. \n\n", "id": 31001}, "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjSjAEM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/18002", "type": "Nugget", "id": 18002}, {"nuggetType": "quiz", "name": "Query Parameters", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjVjAEM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/18005", "type": "Nugget", "id": 18005}, {"nuggetType": "quiz", "name": "Correct Url", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBi8lAEM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/19004", "type": "Nugget", "id": 19004}, {"nuggetType": "lecture", "name": "Making Links Solution", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "73e2694b-77fb-41e8-9385-e5bd03141e51", "name": "cs253_unit1_10_s_Making-Links", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch0LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGPpVDA", "youtube_id": "untcGFathic", "youtube_state": "done", "path": "Course/cs253/Media/11002", "transcript": "\ufeff1\n00:00:00,000 --> 00:00:02,000\nAnd the answer is: you just take the phrase, \"my favorite\",\n\n2\n00:00:02,000 --> 00:00:06,000\nyou surround it by an anchor tag--opening and closing--\n\n3\n00:00:06,000 --> 00:00:12,000\nand then you have: an \"href\" attribute equals \"udacity.com\".\n\n4\n00:00:12,000 --> 00:00:14,000\nEasy Peasy. \n\n", "id": 11002}, "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiinAEM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/20002", "type": "Nugget", "id": 20002}, {"nuggetType": "lecture", "name": "Valid Headers Solution", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "971615b5-8a89-4ed4-8d3f-39b4946fb8f8", "name": "cs253_unit1_26_s_Valid-Headers", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch4LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGIykAQw", "youtube_id": "bIXjpPGRSOI", "youtube_state": "done", "path": "Course/cs253/Media/21004", "transcript": "\ufeff", "id": 21004}, "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBijnAEM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/20003", "type": "Nugget", "id": 20003}, {"nuggetType": "lecture", "name": "Bold Tag", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "1a240e1f-b8d1-4cf1-91ed-66839fba296d", "name": "cs253_unit1_07_p_Bold-Tag", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch4LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGKGcAQw", "youtube_id": "z0ZNePNb3KU", "youtube_state": "done", "path": "Course/cs253/Media/20001", "transcript": "\ufeff1\n00:00:00,000 --> 00:00:02,000\nOkay--the first tag we're going to learn about is the b tag.\n\n2\n00:00:02,000 --> 00:00:06,000\nAnd it looks like this: it's got an opening b and a closing b,\n\n3\n00:00:06,000 --> 00:00:07,000\nthere's our closing slash.\n\n4\n00:00:07,000 --> 00:00:12,000\nAnd anything that appears inside the b tag appears bold.\n\n5\n00:00:12,000 --> 00:00:15,000\nSo this is b for bold.\n\n6\n00:00:15,000 --> 00:00:16,000\nPretty simple tag.\n\n7\n00:00:16,000 --> 00:00:18,000\nLet's play around with this in the HTML editor a little bit.\n\n8\n00:00:18,000 --> 00:00:22,000\nHere we are--we've got this--you know--\n\n9\n00:00:22,000 --> 00:00:23,000\nthis plain text that we typed in before.\n\n10\n00:00:23,000 --> 00:00:27,000\nLet's make one of these words bold.\n\n11\n00:00:27,000 --> 00:00:30,000\nOkay--so I took the word love and I preceded it \n\n12\n00:00:30,000 --> 00:00:32,000\nby an opening tag and a closing tag,\n\n", "id": 20001}, "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiJpAEM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/21001", "type": "Nugget", "id": 21001}, {"nuggetType": "lecture", "name": "Get", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "a54951cc-f492-48f3-ae83-5321aba2a51c", "name": "cs253_unit1_22_q_GET", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch0LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGPMuDA", "youtube_id": "Ejq6-LAf6_0", "youtube_state": "done", "path": "Course/cs253/Media/6003", "transcript": "\ufeff1\n00:00:00,000 --> 00:00:03,000\nOkay--let's move on, and now we're going to talk about HTTP. \n\n2\n00:00:03,000 --> 00:00:07,000\nIf you recall, this was what we described as the main protocol of the Web. \n\n3\n00:00:07,000 --> 00:00:12,000\nThis is what your browser uses to talk to the Web Servers. \n\n4\n00:00:12,000 --> 00:00:15,000\nHTTP stands for Hyper Text Transfer Protocol. \n\n5\n00:00:15,000 --> 00:00:17,000\nThe request from your browser for the URL,\n\n6\n00:00:17,000 --> 00:00:20,000\nwww.example.com/foo, \n\n7\n00:00:20,000 --> 00:00:23,000\nbegins with the request line. \n\n8\n00:00:23,000 --> 00:00:25,000\nIt looks something like this: this is the request line.\n\n9\n00:00:25,000 --> 00:00:28,000\nNow, HTTP is a very simple text protocol,\n\n10\n00:00:28,000 --> 00:00:31,000\nso this text is sent over the Internet to the Server--\n\n11\n00:00:31,000 --> 00:00:33,000\njust like this; it's human-readable too. \n\n12\n00:00:33,000 --> 00:00:37,000\nThe request line has 3 main parts. \n\n13\n00:00:37,000 --> 00:00:39,000\nFirst is the method, \n\n14\n00:00:39,000 --> 00:00:41,000\nnext is the path--\n\n15\n00:00:41,000 --> 00:00:43,000\nand finally, is the version. \n\n16\n00:00:43,000 --> 00:00:47,000\nThe method is what type of request you're making to the Server. \n\n17\n00:00:47,000 --> 00:00:49,000\nThe most common method, by far, is GET--\n\n18\n00:00:49,000 --> 00:00:53,000\nand this is how you GET a document from the Server. \n\n19\n00:00:53,000 --> 00:00:56,000\nOther popular methods are GET and POST.\n\n20\n00:00:56,000 --> 00:00:59,000\nThere are other ones, but these are the one's we're going to use in the class. \n\n21\n00:00:59,000 --> 00:01:02,000\nNext is the path--in this case, it's \"/foo\".\n\n22\n00:01:02,000 --> 00:01:04,000\nYou remember this from the URL, \n\n23\n00:01:04,000 --> 00:01:06,000\nbut the path from the URL comes here. \n\n24\n00:01:06,000 --> 00:01:09,000\nThis is the actual document we're requesting from the Server. \n\n25\n00:01:09,000 --> 00:01:11,000\nAnd finally, is the version. \n\n26\n00:01:11,000 --> 00:01:14,000\nIt's always \"HTTP/\" and then a version number. \n\n27\n00:01:14,000 --> 00:01:17,000\nMost browsers and Servers these days speak 1.1,\n\n28\n00:01:17,000 --> 00:01:23,000\nbut we'll also touch on 1.0 a little bit in this class\n\n29\n00:01:23,000 --> 00:01:27,000\nbecause 1.0 has a few uses of its own. \n\n30\n00:01:27,000 --> 00:01:31,000\nNow--you're wondering where the host name is in this request line?\n\n31\n00:01:31,000 --> 00:01:33,000\nIt's not here--all that's here is the path. \n\n32\n00:01:33,000 --> 00:01:35,000\nWe're connected to this host.\n\n33\n00:01:35,000 --> 00:01:37,000\nYour browser connected to this host--or, \n\n34\n00:01:37,000 --> 00:01:39,000\nif we're playing around with HTTP,  we made the connection. \n\n35\n00:01:39,000 --> 00:01:41,000\nBut that's how we know where we are. \n\n36\n00:01:41,000 --> 00:01:43,000\nSo this is used for making a connection,\n\n37\n00:01:43,000 --> 00:01:46,000\nand the path is used for making the request. \n\n38\n00:01:46,000 --> 00:01:49,000\nLet's have a quick quiz--given the following URL:\n\n39\n00:01:49,000 --> 00:01:56,000\nexample.com/foo/logo.png?p=1#tricky\n\n40\n00:01:56,000 --> 00:02:02,000\nwhat is the request line to GET this URL using HTTP/1.1?\n\n", "id": 6003}, "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiLpAEM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/21003", "type": "Nugget", "id": 21003}, {"nuggetType": "program", "name": "Paragraph Tag", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiPpAEM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/21007", "suppliedCode": null, "type": "Nugget", "id": 21007}, {"nuggetType": "quiz", "name": "Valid Headers", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiQpAEM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/21008", "type": "Nugget", "id": 21008}, {"nuggetType": "quiz", "name": "Port", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBj3qwEM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/22007", "type": "Nugget", "id": 22007}, {"nuggetType": "lecture", "name": "Bold Tag Solution", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "3efcdf51-f4a8-4c89-b13b-7ad04a92e7dd", "name": "cs253_unit1_07_s_Bold-Tag", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch4LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGPGrAQw", "youtube_id": "f4bw00Tpno4", "youtube_state": "done", "path": "Course/cs253/Media/22001", "transcript": "\ufeff1\n00:00:00,000 --> 00:00:01,000\nThe answer should look something like this:\n\n2\n00:00:01,000 --> 00:00:05,000\nshould be--HTML is--and then we have our opening b tag,\n\n3\n00:00:05,000 --> 00:00:10,000\nthe words 'reasonably straightforward,' and then our closing b tag.\n\n4\n00:00:10,000 --> 00:00:12,000\nIt's also possible to do this-- \n\n5\n00:00:12,000 --> 00:00:15,000\nand I wasn't super clear when I gave you the problem--\n\n6\n00:00:15,000 --> 00:00:17,000\nthat you could put a b tag\n\n7\n00:00:17,000 --> 00:00:20,000\njust around the word reasonably, and just around the word straightforward.\n\n8\n00:00:20,000 --> 00:00:23,000\nBut, obviously, it's easier if you put it around \n\n9\n00:00:23,000 --> 00:00:26,000\njust the whole phrase, then you only need one element instead of two.\n\n", "id": 22001}, "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjZswEM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/23001", "type": "Nugget", "id": 23001}, {"nuggetType": "lecture", "name": "Adding Images", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "1714881a-722c-4b81-acf6-7e4550cc5025", "name": "cs253_unit1_11_l_Adding-Images", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch4LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGOHaAQw", "youtube_id": "25anCSE2CH4", "youtube_state": "done", "path": "Course/cs253/Media/28001", "transcript": "\ufeff1\n00:00:00,000 --> 00:00:02,000\nAll right. So let's learn another tag. \n\n2\n00:00:02,000 --> 00:00:04,000\nThis one is the Image tag. \n\n3\n00:00:04,000 --> 00:00:08,000\nIt looks like this: <img>\n\n4\n00:00:08,000 --> 00:00:10,000\nand this is for including images. \n\n5\n00:00:10,000 --> 00:00:13,000\nIt has the following structure: \n\n6\n00:00:13,000 --> 00:00:16,000\nthe opening <img> tag;\n\n7\n00:00:16,000 --> 00:00:19,000\nit has an attribute called source--\"src =\"\n\n8\n00:00:19,000 --> 00:00:24,000\nand this equals a URL--this is the URL of the image to download. \n\n9\n00:00:24,000 --> 00:00:26,000\nRemember, we talked about how the Web service \n\n10\n00:00:26,000 --> 00:00:28,000\ncan serve all sorts of different types of content. \n\n11\n00:00:28,000 --> 00:00:30,000\nIf you're going to serve an image, this is how you would do it. \n\n12\n00:00:30,000 --> 00:00:33,000\nYou would include it in an image tag in HTML\n\n13\n00:00:33,000 --> 00:00:36,000\nand you reference the URL. \n\n14\n00:00:36,000 --> 00:00:38,000\nAnd then there's another attribute called \"alt\"--\n\n15\n00:00:38,000 --> 00:00:40,000\nwhich stands for \"alternate\"--\n\n16\n00:00:40,000 --> 00:00:43,000\nand this is text that gets displayed when the image doesn't load. \n\n17\n00:00:43,000 --> 00:00:47,000\nIt's \"required\" in the sense that HTML Parsers will complain at you\n\n18\n00:00:47,000 --> 00:00:51,000\nif it's not there. \n\n19\n00:00:51,000 --> 00:00:53,000\nNothing will break, but it's really nice to include it. \n\n20\n00:00:53,000 --> 00:00:58,000\nSo at\"broken requests\"--like if our browser requests a URL that doesn't exist--\n\n21\n00:00:58,000 --> 00:01:00,000\nthis is the text that gets displayed,\n\n22\n00:01:00,000 --> 00:01:02,000\nand it's also for blind people. \n\n23\n00:01:02,000 --> 00:01:05,000\nYou know--it doesn't take much to add an (alt = \"text\") that will make somebody's life\n\n24\n00:01:05,000 --> 00:01:07,000\nor somebody's day, at least, mildly easier. \n\n25\n00:01:07,000 --> 00:01:09,000\nAnd one other thing I'd like to point out here \n\n26\n00:01:09,000 --> 00:01:11,000\nis every tag we've talked about, so far, \n\n27\n00:01:11,000 --> 00:01:14,000\nhas had a closing tag--images don't. \n\n28\n00:01:14,000 --> 00:01:17,000\nThis is the entire tag; there's no contents to an image.  \n\n29\n00:01:17,000 --> 00:01:19,000\nSee--it just ends right here. \n\n30\n00:01:19,000 --> 00:01:21,000\nThis is called a \"void\" tag. \n\n31\n00:01:21,000 --> 00:01:23,000\nAnd a \"void\" tag is a tag that has no content--\n\n32\n00:01:23,000 --> 00:01:27,000\nand because it has no content, it doesn't need a closing tag. \n\n33\n00:01:27,000 --> 00:01:29,000\nLet's try this thing  out in the browser \n\n34\n00:01:29,000 --> 00:01:31,000\nand see how it looks in real life. \n\n35\n00:01:31,000 --> 00:01:34,000\nOkay. So here we are in our little HTML previewer. \n\n36\n00:01:34,000 --> 00:01:36,000\nLet's add an image. \n\n37\n00:01:36,000 --> 00:01:39,000\nOkay. So we've got our image tag,\n\n38\n00:01:39,000 --> 00:01:42,000\nsource equals \"udacity.com\", \n\n39\n00:01:42,000 --> 00:01:47,000\nand \"hipmunk.png\"--this is our URL of an image that I've prepared for us.\n\n40\n00:01:47,000 --> 00:01:50,000\nWe've got some (alt = \"text\") there; let's to ahead and click Update,\n\n41\n00:01:50,000 --> 00:01:52,000\nand--ta-da--there's our image. \n\n42\n00:01:52,000 --> 00:01:54,000\nNow, a couple other things we can do: \n\n43\n00:01:54,000 --> 00:01:57,000\nI could put some text here.\n\n44\n00:01:57,000 --> 00:02:03,000\nThere's our text; images just appear in line with text. \n\n45\n00:02:03,000 --> 00:02:08,000\nSo a small image just appears right in the middle of all the text. \n\n", "id": 28001}, "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjaswEM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/23002", "type": "Nugget", "id": 23002}, {"nuggetType": "lecture", "name": "Span And Div Solution", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "ea930255-cd8e-4054-a096-6ab25e9d3c46", "name": "cs253_unit1_15_s_Span-and-Div", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch0LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGLNtDA", "youtube_id": "Qo1oT4Huu80", "youtube_state": "uploading", "path": "Course/cs253/Media/14003", "transcript": null, "id": 14003}, "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjbswEM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/23003", "type": "Nugget", "id": 23003}, {"nuggetType": "lecture", "name": "Response Headers", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "71b30c34-a1d7-4cf3-a62d-70f408a011ce", "name": "cs253_unit1_28_l_Response-Headers", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch4LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGMriAQw", "youtube_id": "kbADitrwLw0", "youtube_state": "done", "path": "Course/cs253/Media/29002", "transcript": "\ufeff", "id": 29002}, "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjcswEM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/23004", "type": "Nugget", "id": 23004}, {"nuggetType": "lecture", "name": "Document Structure", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "075d699f-8459-4952-9016-7a1f4c77b41a", "name": "cs253_unit1_16_l_Document-Structure", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch0LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGI0nDA", "youtube_id": "NZ0IEeusiL4", "youtube_state": "done", "path": "Course/cs253/Media/5005", "transcript": "\ufeff1\n00:00:00,000 --> 00:00:02,000\nThat's enough HTML elements for now--I want to talk \n\n", "id": 5005}, "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjCuwEM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/24002", "type": "Nugget", "id": 24002}, {"nuggetType": "quiz", "name": "Span And Div", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiqwwEM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/25002", "type": "Nugget", "id": 25002}, {"nuggetType": "lecture", "name": "Italics Solution", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "3444e8b8-3a7e-4995-b6e8-dd4e315454f2", "name": "cs253_unit1_08_s_Italics", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch4LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGKnDAQw", "youtube_id": "Ov0fhaSJgKc", "youtube_state": "done", "path": "Course/cs253/Media/25001", "transcript": "\ufeff", "id": 25001}, "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiRywEM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/26001", "type": "Nugget", "id": 26001}, {"nuggetType": "lecture", "name": "Missing End Tag Solution", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "24fc0b32-0e91-48ca-a1f5-cb8af1c4edb7", "name": "cs253_unit1_09_s_Missing-End-Tag", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch0LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGJp1DA", "youtube_id": "RbU4jQIBcIs", "youtube_state": "done", "path": "Course/cs253/Media/15002", "transcript": "\ufeff1\n00:00:00,000 --> 00:00:02,000\nThe correct answer is:\n\n2\n00:00:02,000 --> 00:00:05,000\nEverything after the opening <em> tag is italicized. \n\n3\n00:00:05,000 --> 00:00:08,000\nIf your browser crashes, you should quit using Internet Explorer.\n\n4\n00:00:08,000 --> 00:00:12,000\nAnd--you know, maybe this last answer is more truthful than joke\n\n5\n00:00:12,000 --> 00:00:15,000\nbecause there's definitely a world in which \n\n6\n00:00:15,000 --> 00:00:19,000\nbrowsers behave in a somewhat unpredictable manner. \n\n7\n00:00:19,000 --> 00:00:22,000\nBut I think, in this simple example:\n\n8\n00:00:22,000 --> 00:00:24,000\neverything after the <em> tag should be italicized. \n\n9\n00:00:24,000 --> 00:00:28,000\nAnd let's try it out in our browser, just to be certain.\n\n10\n00:00:28,000 --> 00:00:31,000\nOkay. Text is where I left it, no closing </em> tag. \n\n11\n00:00:31,000 --> 00:00:34,000\nUpdate. Cool--everything's still italicized. \n\n12\n00:00:34,000 --> 00:00:38,000\nIf I were to move this <em> tag--\n\n13\n00:00:38,000 --> 00:00:40,000\nclosing </em> tag--here, \n\n14\n00:00:40,000 --> 00:00:43,000\nand Update, you can see that HTML straightens out\n\n15\n00:00:43,000 --> 00:00:45,000\nbecause just the <em> is around this phrase. \n\n16\n00:00:45,000 --> 00:00:49,000\nEnough of those simple tags--let's learn something a little bit more complex. \n\n", "id": 15002}, "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBj50gEM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/27001", "type": "Nugget", "id": 27001}, {"nuggetType": "lecture", "name": "Paragraph Tag", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "b86c1b1f-63e5-4b94-ab6b-795a538f634d", "name": "cs253_unit1_13_p_Paragraph-Tag", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch0LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGKUfDA", "youtube_id": "eDqDsAChLiU", "youtube_state": "done", "path": "Course/cs253/Media/4005", "transcript": "\ufeff1\n00:00:00,000 --> 00:00:02,000\nOkay. Now I'd like you to do the same thing--and this time, \n\n2\n00:00:02,000 --> 00:00:05,000\nuse the <paragraph> tag instead. \n\n", "id": 4005}, "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBj70gEM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/27003", "type": "Nugget", "id": 27003}, {"nuggetType": "lecture", "name": "Web Applications", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "641b31dc-42f9-4fab-9eba-2faf5cf88213", "name": "cs253_unit1_30_l_Web-Applications", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch0LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGJ91DA", "youtube_id": "l4V_ibq_i7k", "youtube_state": "done", "path": "Course/cs253/Media/15007", "transcript": "\ufeff", "id": 15007}, "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBj90gEM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/27005", "type": "Nugget", "id": 27005}, {"nuggetType": "lecture", "name": "Telnet Request Solution", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "04c7c69a-2441-4da5-8c04-36a2421e07f1", "name": "cs253_unit1_29_s_Telnet-Request", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch4LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGMviAQw", "youtube_id": "gEpPYb_8wQ4", "youtube_state": "done", "path": "Course/cs253/Media/29003", "transcript": "\ufeff", "id": 29003}, "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBji2gEM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/28002", "type": "Nugget", "id": 28002}, {"nuggetType": "lecture", "name": "Dynamic Content", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "691045d3-0ebc-40f1-8880-2ef6d7bec09a", "name": "cs253_unit1_31_q_Dynamic-Content", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch4LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGPSrAQw", "youtube_id": "rdznxiF12Vw", "youtube_state": "done", "path": "Course/cs253/Media/22004", "transcript": "\ufeff", "id": 22004}, "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjM4gEM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/29004", "type": "Nugget", "id": 29004}, {"nuggetType": "lecture", "name": "Inline Vs Block", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "a7e72d47-033c-4433-8128-b096376a4308", "name": "cs253_unit1_14_l_Inline-vs-Block", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch4LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGMniAQw", "youtube_id": "i_LHdtkkikI", "youtube_state": "done", "path": "Course/cs253/Media/29001", "transcript": "\ufeff1\n00:00:00,000 --> 00:00:02,000\nOne last thing I'd like to talk about with <br> and <p>--\n\n2\n00:00:02,000 --> 00:00:04,000\nI'll show you right now.\n\n3\n00:00:04,000 --> 00:00:07,000\nLet's make this all be one line again.\n\n4\n00:00:07,000 --> 00:00:09,000\nOkay--so I Update this and we have one line. \n\n5\n00:00:09,000 --> 00:00:13,000\nWe can put a <br> tag in the middle of this.\n\n6\n00:00:13,000 --> 00:00:17,000\nWe don't actually have to have the line breaks in our HTML.\n\n7\n00:00:17,000 --> 00:00:20,000\nSo when I click Update, we get our line break--\n\n8\n00:00:20,000 --> 00:00:22,000\nno matter how the HTML is formatted. \n\n9\n00:00:22,000 --> 00:00:24,000\nSo we can format this however we want--\n\n10\n00:00:24,000 --> 00:00:26,000\nput all these spaces in here--\n\n11\n00:00:26,000 --> 00:00:29,000\nand when we Update this, \n\n12\n00:00:29,000 --> 00:00:31,000\nit'll always come out the same. \n\n13\n00:00:31,000 --> 00:00:36,000\nThere's an example--all this Whitespace turns into one single space. \n\n14\n00:00:36,000 --> 00:00:41,000\nAll of these new lines here turn into one single space. \n\n15\n00:00:41,000 --> 00:00:48,000\nYou know--this text, space, is really--you know--you get the idea. Okay.\n\n16\n00:00:48,000 --> 00:00:51,000\nWhy do we have two different ways of making new lines? \n\n17\n00:00:51,000 --> 00:00:53,000\nWhy do we have a <br> tag and a >p> tag? \n\n18\n00:00:53,000 --> 00:00:58,000\nThe answer is because the <br> tag is what we call \"inline\",\n\n19\n00:00:58,000 --> 00:01:02,000\nand the <p> tag is what we call \"block\".\n\n20\n00:01:02,000 --> 00:01:05,000\nNow--so what the <br> tag was actually doing \n\n21\n00:01:05,000 --> 00:01:07,000\nwas just ending a line. \n\n22\n00:01:07,000 --> 00:01:10,000\nSo when we have some text and we put a <br>  in the middle of it, \n\n23\n00:01:10,000 --> 00:01:12,000\nit just basically says: the line ends here, \n\n24\n00:01:12,000 --> 00:01:14,000\nand this guy wraps to the next line. \n\n25\n00:01:14,000 --> 00:01:16,000\nThe <p> tag works differently; the <p> tag \n\n26\n00:01:16,000 --> 00:01:18,000\nactually makes an invisible box. \n\n27\n00:01:18,000 --> 00:01:21,000\nSo when we have an HTML that looks like this--\n\n28\n00:01:21,000 --> 00:01:23,000\nthis creates an actual box. \n\n29\n00:01:23,000 --> 00:01:26,000\nSo instead of just rendering text, blank line--\n\n30\n00:01:26,000 --> 00:01:29,000\nwhat this is actually rendering is something sort of like this:\n\n31\n00:01:29,000 --> 00:01:33,000\nYou've got two lines of text, and there's actually this invisible box around text. \n\n32\n00:01:33,000 --> 00:01:35,000\nAnd that's what the <p> tag does,\n\n33\n00:01:35,000 --> 00:01:37,000\nis it makes this invisible box and this invisible box \n\n34\n00:01:37,000 --> 00:01:40,000\ncan actually have height and it can have width--\n\n35\n00:01:40,000 --> 00:01:42,000\nwhere inline elements are just text. \n\n36\n00:01:42,000 --> 00:01:45,000\nSo the example over here would be more like this: \n\n37\n00:01:45,000 --> 00:01:48,000\nso it's just two lines of text, and there's really just a little new line here. \n\n38\n00:01:48,000 --> 00:01:51,000\nThere's nothing fancy going on. \n\n39\n00:01:51,000 --> 00:01:54,000\nAnd the difference between inline and block elements \n\n40\n00:01:54,000 --> 00:01:57,000\nwill come up a fair amount later in this course. \n\n41\n00:01:57,000 --> 00:02:00,000\nAnd it's just important to know that there's a distinction\n\n42\n00:02:00,000 --> 00:02:02,000\nand they have kind of different behavior. \n\n43\n00:02:02,000 --> 00:02:05,000\nSo far, all of the elements we've learned--other than <p>--\n\n44\n00:02:05,000 --> 00:02:07,000\nare inline elements. \n\n45\n00:02:07,000 --> 00:02:12,000\nSo inline elements are: <b>, <em>--\n\n46\n00:02:12,000 --> 00:02:14,000\neven <image> is an inline element.\n\n47\n00:02:14,000 --> 00:02:17,000\nAnd we saw how, before, our little <hipmunk> image \n\n48\n00:02:17,000 --> 00:02:19,000\nappeared right in the middle of the text. \n\n49\n00:02:19,000 --> 00:02:21,000\nThat's because it's inline. \n\n50\n00:02:21,000 --> 00:02:25,000\nSo far, the only block element we've learned is the <p> element. \n\n", "id": 29001}, "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBix6gEM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/30001", "type": "Nugget", "id": 30001}, {"nuggetType": "program", "name": "Bold Tag", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBib8gEM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/31003", "suppliedCode": null, "type": "Nugget", "id": 31003}, {"nuggetType": "lecture", "name": "Correct Url", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "87ca19d1-2858-493e-a6b1-edb72c591b20", "name": "cs253_unit1_18_q_Correct-URL", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch4LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGIqkAQw", "youtube_id": "ecQ6ajom6DE", "youtube_state": "done", "path": "Course/cs253/Media/21002", "transcript": "\ufeff1\n00:00:00,000 --> 00:00:02,000\nOkay--Quiz:\n\n2\n00:00:02,000 --> 00:00:04,000\nGiven the protocol ftp, \n\n3\n00:00:04,000 --> 00:00:07,000\nthe host, www.udacity.com, \n\n4\n00:00:07,000 --> 00:00:09,000\nand the path, /about, \n\n5\n00:00:09,000 --> 00:00:13,000\nwhat is the correct URL? \n\n", "id": 21002}, "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiB-gEM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/32001", "type": "Nugget", "id": 32001}, {"nuggetType": "lecture", "name": "Telnet Request", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "f4a126b3-53ab-4159-88c7-37fb9146acdb", "name": "cs253_unit1_29_q_Telnet-Request", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch4LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGI2kAQw", "youtube_id": "3Wdj015cL7I", "youtube_state": "done", "path": "Course/cs253/Media/21005", "transcript": "\ufeff", "id": 21005}, "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiC-gEM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/32002", "type": "Nugget", "id": 32002}, {"nuggetType": "lecture", "name": "Port", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "0cfdd881-82c0-415d-b9f0-11ed514b3644", "name": "cs253_unit1_21_q_Port", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch4LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGOmBAgw", "youtube_id": "DQWinfi7jBE", "youtube_state": "done", "path": "Course/cs253/Media/33001", "transcript": "\ufeff1\n00:00:00,000 --> 00:00:02,000\nThere's another piece to URLs I'd like to show you--\n\n2\n00:00:02,000 --> 00:00:05,000\nand this is the final piece we'll talk about right now--\n\n3\n00:00:05,000 --> 00:00:07,000\nand that's called, the \"port\". \n\n4\n00:00:07,000 --> 00:00:09,000\nWhen you make a Web request to a Server, this is the host. \n\n5\n00:00:09,000 --> 00:00:11,000\nThis is the name of the machine \n\n6\n00:00:11,000 --> 00:00:14,000\nor the location of the machine you're requesting. \n\n7\n00:00:14,000 --> 00:00:16,000\nIn order to make an Internet connection, you need 2 things.\n\n8\n00:00:16,000 --> 00:00:19,000\nYou need: 1) the address of the machine, which is represented by the host\n\n9\n00:00:19,000 --> 00:00:21,000\nand 2) you also need a port. \n\n10\n00:00:21,000 --> 00:00:24,000\nAnd, by default, the port equals 80. \n\n11\n00:00:24,000 --> 00:00:26,000\nIf you want to use a different port, \n\n12\n00:00:26,000 --> 00:00:28,000\nyou can include it in the URL \n\n13\n00:00:28,000 --> 00:00:33,000\nbetween the host and the path, separated by a colon. \n\n14\n00:00:33,000 --> 00:00:36,000\nAnd in this case, we'll be making a request on port 8000. \n\n15\n00:00:36,000 --> 00:00:39,000\nGet used to this URL because this will be \n\n16\n00:00:39,000 --> 00:00:42,000\nyour local development URL for a lot of this course--\n\n17\n00:00:42,000 --> 00:00:45,000\nand, actually, for a lot of your career as a Web developer. \n\n18\n00:00:45,000 --> 00:00:48,000\nYou're constantly accessing your local machine \n\n19\n00:00:48,000 --> 00:00:51,000\nand you're probably doing it on something other than port 80. \n\n20\n00:00:51,000 --> 00:00:54,000\nThere are even more parts to a URL, \n\n21\n00:00:54,000 --> 00:00:56,000\nbut they're not particularly relevant to us right now. \n\n22\n00:00:56,000 --> 00:00:59,000\nThey'll come up as we go. \n\n23\n00:00:59,000 --> 00:01:03,000\nLet's do one final quiz about URLs, before we move on.\n\n24\n00:01:03,000 --> 00:01:05,000\nWhat I'd like you to do is take this URL\n\n25\n00:01:05,000 --> 00:01:08,000\nand identify its main parts:\n\n26\n00:01:08,000 --> 00:01:12,000\nhost, protocol, fragment, query, and port.\n\n", "id": 33001}, "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjRiQIM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/34001", "type": "Nugget", "id": 34001}, {"nuggetType": "lecture", "name": "Most Common Method", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "30c9c3f4-79b7-4059-b705-61c68c0e1184", "name": "cs253_unit1_23_q_Most-Common-Method", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch0LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGM1lDA", "youtube_id": "fUCHkpvXWr0", "youtube_state": "done", "path": "Course/cs253/Media/13005", "transcript": "\ufeff", "id": 13005}, "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBi5kQIM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/35001", "type": "Nugget", "id": 35001}, {"nuggetType": "quiz", "name": "Components Of The Web", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBi6kQIM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/35002", "type": "Nugget", "id": 35002}, {"nuggetType": "lecture", "name": "Http Responses", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "0d33e0f5-2b5a-4a4b-ba90-60a39d0160d8", "name": "cs253_unit1_27_l_http-Responses", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch4LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGNKJAgw", "youtube_id": "1Zkd66tZQIA", "youtube_state": "done", "path": "Course/cs253/Media/34002", "transcript": "\ufeff", "id": 34002}, "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBihmQIM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/36001", "type": "Nugget", "id": 36001}, {"nuggetType": "quiz", "name": "World Wide Web", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiJoQIM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/37001", "type": "Nugget", "id": 37001}, {"nuggetType": "quiz", "name": "File Types", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjxqAIM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/38001", "type": "Nugget", "id": 38001}, {"nuggetType": "quiz", "name": "Paragraph Tag", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjm1wIM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/44006", "type": "Nugget", "id": 44006}, {"nuggetType": "lecture", "name": "Intro To Html Tags", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "media": {"dotsub_id": "c894a3c1-12d8-4dc5-b401-c83f08a4f138", "name": "cs253_unit1_06_l_Intro-to-HTML-Tags", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": "rejected: Duplicate video", "key": "agpzfnVkYWNpdHl1ch4LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGKTvAgw", "youtube_id": "CPmWw9H27ik", "youtube_state": "failed", "path": "Course/cs253/Media/47012", "transcript": null, "id": 47012}, "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBj2-AQM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/81014", "type": "Nugget", "id": 81014}, {"nuggetType": "quiz", "name": "Bold Tag", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBiRvwUM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/90001", "type": "Nugget", "id": 90001}, {"nuggetType": "quiz", "name": "Italics", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjhzgUM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/92001", "type": "Nugget", "id": 92001}, {"nuggetType": "quiz", "name": "Making Links", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBjJ1gUM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/93001", "type": "Nugget", "id": 93001}, {"nuggetType": "quiz", "name": "Whitespace", "parent": "agpzfnVkYWNpdHl1cjILEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDA", "key": "agpzfnVkYWNpdHl1ckALEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKEfDAsSBk51Z2dldBix3gUM", "path": "Course/cs253/CourseRev/apr2012/Unit/4001/Nugget/94001", "type": "Nugget", "id": 94001}]}, {"name": "Homework 1", "parent": "agpzfnVkYWNpdHl1cicLEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgw", "type": "Unit", "evaluated": false, "closedAt": "", "nuggetLayout": [[{"nugget_key": "agpzfnVkYWNpdHl1ckELEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GNmnBQwLEgZOdWdnZXQY6_sDDA"}, {"nugget_key": "agpzfnVkYWNpdHl1ckELEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GNmnBQwLEgZOdWdnZXQY-cMGDA"}]], "availableAt": "", "key": "agpzfnVkYWNpdHl1cjMLEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GNmnBQw", "path": "Course/cs253/CourseRev/apr2012/Unit/87001", "open": false, "id": 87001, "nuggets": [{"nuggetType": "lecture", "name": "Google App Engine", "parent": "agpzfnVkYWNpdHl1cjMLEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GNmnBQw", "media": {"dotsub_id": "None", "name": "cs253_hw1_00_qw_Google-App-Engine.mp4", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": "rejected: Duplicate video", "key": "agpzfnVkYWNpdHl1ch4LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGJG8Bgw", "youtube_id": "Sj_OmHLEdEA", "youtube_state": "failed", "path": "Course/cs253/Media/106001", "transcript": null, "id": 106001}, "key": "agpzfnVkYWNpdHl1ckELEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GNmnBQwLEgZOdWdnZXQY6_sDDA", "path": "Course/cs253/CourseRev/apr2012/Unit/87001/Nugget/65003", "type": "Nugget", "id": 65003}, {"nuggetType": "lecture", "name": "Google App Engine", "parent": "agpzfnVkYWNpdHl1cjMLEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GNmnBQw", "media": {"dotsub_id": "7b42b6d9-53c3-4580-be54-ba3f0709a3dc", "name": "cs253_hw1_00_qs_Google-App-Engine", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch4LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGMrWBQw", "youtube_id": "Sj_OmHLEdEA", "youtube_state": "done", "path": "Course/cs253/Media/93002", "transcript": null, "id": 93002}, "key": "agpzfnVkYWNpdHl1ckELEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GNmnBQwLEgZOdWdnZXQYmeYFDA", "path": "Course/cs253/CourseRev/apr2012/Unit/87001/Nugget/95001", "type": "Nugget", "id": 95001}, {"nuggetType": "snippetQuiz", "name": "Google App Engine", "parent": "agpzfnVkYWNpdHl1cjMLEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GNmnBQw", "key": "agpzfnVkYWNpdHl1ckELEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GNmnBQwLEgZOdWdnZXQY6fUFDA", "path": "Course/cs253/CourseRev/apr2012/Unit/87001/Nugget/97001", "type": "Nugget", "id": 97001}, {"nuggetType": "curlyQuiz", "name": "Google App Engine", "parent": "agpzfnVkYWNpdHl1cjMLEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GNmnBQw", "key": "agpzfnVkYWNpdHl1ckELEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GNmnBQwLEgZOdWdnZXQY-cMGDA", "path": "Course/cs253/CourseRev/apr2012/Unit/87001/Nugget/107001", "type": "Nugget", "id": 107001}]}, {"name": "Homework Help 1", "parent": "agpzfnVkYWNpdHl1cicLEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgw", "type": "Unit", "evaluated": false, "closedAt": "", "nuggetLayout": [[{"nugget_key": "agpzfnVkYWNpdHl1ckELEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKGNBgwLEgZOdWdnZXQYiZUGDA"}], [{"nugget_key": "agpzfnVkYWNpdHl1ckELEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKGNBgwLEgZOdWdnZXQYkp4DDA"}]], "availableAt": "", "key": "agpzfnVkYWNpdHl1cjMLEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKGNBgw", "path": "Course/cs253/CourseRev/apr2012/Unit/100001", "open": false, "id": 100001, "nuggets": [{"nuggetType": "lecture", "name": "Install Google App Engine", "parent": "agpzfnVkYWNpdHl1cjMLEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKGNBgw", "media": {"dotsub_id": "edbada77-2ab0-4ec6-a548-34bff40ac25d", "name": "cs253_hh1_01_l_Install-Google-App-Engine", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch4LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGPGcBgw", "youtube_id": "euox_iFW2eM", "youtube_state": "done", "path": "Course/cs253/Media/102001", "transcript": null, "id": 102001}, "key": "agpzfnVkYWNpdHl1ckELEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKGNBgwLEgZOdWdnZXQYkp4DDA", "path": "Course/cs253/CourseRev/apr2012/Unit/100001/Nugget/53010", "type": "Nugget", "id": 53010}, {"nuggetType": "lecture", "name": "Intro", "parent": "agpzfnVkYWNpdHl1cjMLEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKGNBgw", "media": {"dotsub_id": "2c41224f-a8d3-41ab-8e15-699cb139d108", "name": "cs253_hh1_00_l_Intro", "parent": "agpzfnVkYWNpdHl1chELEgZDb3Vyc2UiBWNzMjUzDA", "type": "Media", "youtube_failure_reason": null, "key": "agpzfnVkYWNpdHl1ch4LEgZDb3Vyc2UiBWNzMjUzDAsSBU1lZGlhGP3JBAw", "youtube_id": "IFYmvf_RNT0", "youtube_state": "done", "path": "Course/cs253/Media/75005", "transcript": "\ufeff", "id": 75005}, "key": "agpzfnVkYWNpdHl1ckELEgZDb3Vyc2UiBWNzMjUzDAsSCUNvdXJzZVJldiIHYXByMjAxMgwLEgRVbml0GKGNBgwLEgZOdWdnZXQYiZUGDA", "path": "Course/cs253/CourseRev/apr2012/Unit/100001/Nugget/101001", "type": "Nugget", "id": 101001}]}], "path": "Course/cs253/CourseRev/apr2012", "type": "CourseRev", "id": "apr2012"}, "course_title": "Web Application Engineering", "progress": {}, "rev_name": "April 2012", "magik": false, "course_edit_url": "/edit_course?id=cs253"}}